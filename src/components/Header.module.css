/* Caminho: src/components/Header.module.css */

/* ===================================================================================
   ARQUIVO: Header.module.css
   DESCRIÇÃO: Estilos CSS específicos para o componente Header.
              Este arquivo utiliza CSS Modules. Isso significa que cada classe definida
              aqui (como '.header' ou '.title') é transformada em um nome único
              durante o processo de build (ex: 'Header_header__XyZ123').
              Essa técnica é FANTÁSTICA porque garante que os estilos de um componente
              NÃO VÃO ACIDENTALMENTE afetar outros componentes da aplicação.
              É como ter um pequeno universo CSS isolado para cada componente.

   CONCEITOS IMPORTANTES DE CSS DEMONSTRADOS AQUI:
    - CSS Modules: Escopo local de classes.
    - Variáveis CSS (Custom Properties): Uso de `var(--nome-da-variavel)` para
      manter consistência e facilitar a manutenção do design.
    - Flexbox: Para layout e alinhamento dos elementos do cabeçalho.
    - Position Sticky: Para manter o cabeçalho no topo durante o scroll.
    - Box Model (`padding`, `margin`, `border`, `box-sizing`): Fundamentos do layout.
    - Pseudo-classes (`:hover`, `:focus-visible`, `:active`): Para interatividade.
    - Transições (`transition`): Para animações suaves nas mudanças de estado.
    - Media Queries (`@media`): Para design responsivo, adaptando o layout
      a diferentes tamanhos de tela (abordagem "Mobile First").
    - Comentários Detalhados: Para explicar as decisões de design e o propósito
      de cada regra CSS, facilitando o aprendizado e a colaboração.
   =================================================================================== */

/* --- ESTILO PRINCIPAL DO CABEÇALHO (.header) --- */
.header {
  background-color: var(--color-primary);
  color: white;
  padding: 1rem 1.5rem;
  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.18);
  position: sticky;
  top: 0;
  z-index: var(--z-index-header, 100);
  width: 100%;
  box-sizing: border-box;
  transition: padding 0.3s ease-in-out, height 0.3s ease-in-out;
}

/* --- CLASSE PARA O HEADER ENCOLHIDO (.headerEncolhido) --- */
.headerEncolhido {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
}

/* --- AJUSTES NOS ELEMENTOS INTERNOS QUANDO O HEADER ESTÁ ENCOLHIDO --- */
.headerEncolhido .logoAndTitle {
  gap: 0.5rem;
}
.headerEncolhido .logo {
  height: 35px;
}
.headerEncolhido .title {
  font-size: 1.8rem;
}

/* --- NOVO: DIMINUIR O CAMPO DE BUSCA QUANDO O HEADER ENCOLHE --- */
/* Quando o header está encolhido, o input de busca também ficará menor. */
.headerEncolhido .searchInput {
  /* Reduzimos o padding interno do input para torná-lo mais compacto. */
  padding-top: 0.55rem; /* Ajuste fino para manter o texto verticalmente centrado. */
  padding-bottom: 0.55rem;
  padding-left: 0.8rem; /* Menos padding lateral. */
  padding-right: 0.8rem;
  /* Reduzimos o tamanho da fonte do texto DENTRO do input. */
  font-size: 0.9rem;
  /* As transições para 'padding' e 'font-size' já foram definidas no seletor
     '.searchInput' base, garantindo a suavidade da animação. */
}

/* --- NOVO: DIMINUIR OS BOTÕES DE ORDENAÇÃO QUANDO O HEADER ENCOLHE --- */
/* Os botões de ordenação também ficarão menores e mais compactos. */
.headerEncolhido .sortButton {
  /* Reduzimos o padding interno dos botões. */
  padding: 0.35rem 0.7rem; /* Menos padding vertical e horizontal. */
  /* Reduzimos o tamanho da fonte do texto dos botões. */
  font-size: 0.7rem; /* Fonte bem pequena, ideal para economizar espaço.
                            CUIDADO: Não deixe a fonte pequena demais a ponto de
                            comprometer a legibilidade e a facilidade de clique/toque!
                            Teste em dispositivos reais. */
  /* As transições para 'padding' e 'font-size' já foram definidas no seletor
     '.sortButton' base, garantindo a suavidade da animação. */
}

/* --- WRAPPER PARA O CONTEÚDO PRINCIPAL (LOGO, TÍTULO, BOTÃO SURPRESA) (.headerContentWrapper) --- */
.headerContentWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.8rem;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem;
  width: 100%;
  transition: margin-bottom 0.3s ease-in-out;
}
.headerEncolhido .headerContentWrapper {
  margin-bottom: 0.5rem; /* Reduz o espaço abaixo do logo/título antes da busca/filtros,
                            especialmente importante agora que a busca e os filtros
                            também vão encolher, precisando de menos espaço vertical. */
}

/* --- CONTAINER DO LOGO E TÍTULO (.logoAndTitle) --- */
.logoAndTitle {
  display: flex;
  align-items: center;
  gap: 0.8rem;
  text-decoration: none;
  color: inherit;
}

/* --- ESTILO DO LOGOTIPO (.logo) --- */
.logo {
  height: 45px;
  width: auto;
  object-fit: contain;
  transition: height 0.3s ease-in-out;
}

/* --- ESTILO DO TÍTULO PRINCIPAL (.title) --- */
.title {
  font-family: var(--font-primary);
  font-weight: 800;
  font-size: 2rem;
  line-height: 1.1;
  margin: 0;
  letter-spacing: -0.5px;
  color: white;
  transition: font-size 0.3s ease-in-out;
}
.title span {
  vertical-align: middle;
}

/* --- ESTILO DO BOTÃO "ANIMAL SURPRESA" (.randomButton) --- */
.randomButton {
  background-color: var(--color-secondary);
  color: white;
  font-family: var(--font-primary);
  padding: 0.65rem 1.3rem;
  border: none;
  border-radius: var(--border-radius);
  font-size: 0.9rem;
  font-weight: 700;
  white-space: nowrap;
  cursor: pointer;
  transition: background-color 0.2s ease-out, transform 0.15s ease-out,
    box-shadow 0.2s ease-out, opacity 0.3s ease-in-out;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.randomButton:hover,
.randomButton:focus-visible {
  background-color: var(--color-secondary-darker);
  transform: scale(1.03) translateY(-1px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}
.randomButton:focus-visible {
  outline: 2px solid var(--color-primary-darker);
  outline-offset: 2px;
}
.randomButton:active {
  transform: scale(0.98) translateY(0);
}

/* --- CONTAINER DO CAMPO DE BUSCA (.searchContainer) --- */
.searchContainer {
  width: 100%;
  max-width: 640px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  box-sizing: border-box;
  transition: margin-bottom 0.3s ease-in-out;
}
.headerEncolhido .searchContainer {
  margin-bottom: 0.6rem; /* Ajuste fino na margem inferior do container da busca
                            quando o header encolhe, para dar espaço adequado aos
                            botões de filtro (que também encolherão). */
}

/* --- ESTILO DO CAMPO DE INPUT DE BUSCA (.searchInput) --- */
.searchInput {
  width: 100%;
  padding: 0.8rem 1rem;
  border-radius: var(--border-radius);
  border: 2px solid var(--color-border-light, #ced4da);
  color: var(--color-text-light);
  font-size: 1rem;
  font-family: var(--font-secondary);
  outline: none;
  box-sizing: border-box;
  /* TRANSIÇÕES ATUALIZADAS:
     Garantimos que 'padding' e 'font-size' estão aqui para que a mudança
     no estado .headerEncolhido seja animada. */
  transition: border-color 0.2s ease-out, box-shadow 0.2s ease-out,
    padding 0.3s ease-in-out, font-size 0.3s ease-in-out;
}
.searchInput::placeholder {
  color: var(--color-text-muted, #6c757d);
  opacity: 0.9;
  font-style: italic;
}
.searchInput:focus {
  border-color: var(--color-secondary);
  box-shadow: 0 0 0 3.5px rgba(239, 108, 0, 0.25);
}

/* --- CONTAINER DOS BOTÕES DE ORDENAÇÃO (.sortControls) --- */
.sortControls {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 0.6rem 0.8rem;
  padding: 0 0.5rem;
  /* NOVO: Adicionar transição ao 'gap' pode ser interessante, embora o suporte
     para animar 'gap' não seja universal. A principal animação virá do
     padding/font-size dos botões individuais. */
  transition: gap 0.3s ease-in-out;
}

/* Se o gap precisar ser menor quando os botões encolhem */
.headerEncolhido .sortControls {
  gap: 0.4rem 0.5rem; /* Reduz o espaçamento entre os botões menores. */
}

/* --- ESTILO DOS BOTÕES DE ORDENAÇÃO (.sortButton) --- */
.sortButton {
  background-color: var(--color-bg-light);
  color: var(--color-primary-darker);
  padding: 0.5rem 1rem;
  border-radius: var(--border-radius-small);
  border: 1px solid var(--color-primary-darker);
  font-size: 0.8rem;
  font-weight: 600;
  font-family: var(--font-secondary);
  cursor: pointer;
  white-space: nowrap;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  /* TRANSIÇÕES ATUALIZADAS:
     Garantimos que 'padding' e 'font-size' estão aqui para que a mudança
     no estado .headerEncolhido seja animada. */
  transition: background-color 0.2s ease-out, color 0.2s ease-out,
    transform 0.15s ease-out, box-shadow 0.2s ease-out, padding 0.3s ease-in-out,
    font-size 0.3s ease-in-out;
}
.sortButton:hover,
.sortButton:focus-visible {
  background-color: var(--color-primary-darker);
  color: white;
  border-color: var(--color-primary);
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
}
.sortButton:focus-visible {
  outline: 2px solid var(--color-secondary);
  outline-offset: 2px;
}
.sortButton:active {
  transform: translateY(0) scale(0.98);
  background-color: var(--color-primary);
}

/* --- MEDIA QUERIES (AJUSTES PARA TELAS MAIORES) --- */
@media (min-width: 640px) {
  /* sm: Small breakpoint */
  .header {
    padding-left: 2rem;
    padding-right: 2rem;
  }
  .headerContentWrapper {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  /* AJUSTES PARA O ESTADO ENCOLHIDO EM TELAS sm+ */
  .headerEncolhido .logo {
    height: 40px;
  }
  .headerEncolhido .title {
    font-size: 2rem;
  }
  .headerEncolhido .headerContentWrapper {
    margin-bottom: 0.8rem;
  }
  /* Em telas sm+, mesmo encolhidos, os inputs e botões podem ser um pouco maiores
     do que no mobile no estado encolhido. */
  .headerEncolhido .searchInput {
    padding-top: 0.6rem;
    padding-bottom: 0.6rem;
    font-size: 0.95rem; /* Um pouco maior que o 0.9rem do mobile encolhido */
  }
  .headerEncolhido .sortButton {
    padding: 0.4rem 0.8rem;
    font-size: 0.75rem; /* Um pouco maior que o 0.7rem do mobile encolhido */
  }
  .headerEncolhido .sortControls {
    gap: 0.5rem 0.6rem;
  }

  /* Estado NÃO encolhido em telas sm+ */
  .logo {
    height: 50px;
  }
  .title {
    font-size: 2.4rem;
  }
  .randomButton {
    font-size: 1rem;
    padding: 0.7rem 1.5rem;
  }
  .searchInput {
    font-size: 1.05rem;
  }
  .sortButton {
    font-size: 0.875rem;
    padding: 0.6rem 1.1rem;
  }
  .searchContainer,
  .sortControls {
    padding-left: 0;
    padding-right: 0;
  }
}

@media (min-width: 1024px) {
  /* lg: Large breakpoint */
  .header {
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
  }

  /* AJUSTES PARA O ESTADO ENCOLHIDO EM TELAS lg+ */
  .headerEncolhido .logo {
    height: 45px;
  }
  .headerEncolhido .title {
    font-size: 2.25rem;
  }
  /* Em telas lg+, talvez não precisemos encolher tanto os inputs/botões
     ou podemos mantê-los mais próximos dos tamanhos de sm+. */
  .headerEncolhido .searchInput {
    padding-top: 0.65rem;
    padding-bottom: 0.65rem;
    font-size: 1rem; /* Praticamente o tamanho normal do mobile. */
  }
  .headerEncolhido .sortButton {
    padding: 0.45rem 0.9rem;
    font-size: 0.8rem; /* Praticamente o tamanho normal do mobile. */
  }

  /* Estado NÃO encolhido em telas lg+ */
  .title {
    font-size: 2.75rem;
    letter-spacing: -1px;
  }
  .logo {
    height: 55px;
  }
  .searchContainer {
    max-width: 720px;
  }
  .sortControls {
    gap: 0.7rem 1rem;
  }
}

/* ===================================================================================
   NOTAS FINAIS PARA OS ALUNOS (Com foco nas novas alterações):

   - Diminuindo Controles Interativos:
     A principal mudança aqui foi adicionar estilos DENTRO de seletores
     `.headerEncolhido .elementoEspecifico` para reduzir o `padding` e `font-size`
     do `.searchInput` e dos `.sortButton`.

   - A Importância das Transições nos Seletores Base:
     Para que a animação de "encolher" e "expandir" os inputs/botões funcione,
     as propriedades `transition: ... padding ... font-size ...;` DEVEM estar
     nos seletores base (`.searchInput`, `.sortButton`), não apenas nos seletores
     do estado encolhido. Isso permite que o navegador anime a mudança em AMBAS
     as direções.

   - Teste de Usabilidade (Tamanho de Toque/Clique):
     Ao reduzir o tamanho de elementos interativos, é CRUCIAL testar em
     dispositivos reais (especialmente touchscreens). Botões ou campos de texto
     muito pequenos podem ser difíceis de usar, levando a uma experiência ruim.
     Há um equilíbrio entre economizar espaço e manter a usabilidade.
     O "alvo de toque" mínimo recomendado geralmente é em torno de 44px x 44px.
     Nossos botões encolhidos podem ficar abaixo disso em altura, então é algo
     para se ter atenção e, se necessário, considerar a "Ideia 2" (agrupar filtros)
     para telas realmente pequenas.

   - Ajustes Finos de Espaçamento (`margin-bottom`, `gap`):
     Com os elementos internos mudando de tamanho, o espaçamento entre eles
     (`margin-bottom` nos containers, `gap` nos flex containers) também pode
     precisar de ajustes no estado encolhido para manter um layout harmonioso.
     Observe os ajustes em `.headerEncolhido .headerContentWrapper`,
     `.headerEncolhido .searchContainer`, e `.headerEncolhido .sortControls`.

   - Responsividade do Estado Encolhido:
     Perceba como, DENTRO das media queries, também podemos ter regras específicas
     para o estado encolhido (ex: `.headerEncolhido .searchInput` dentro de
     `@media (min-width: 640px)`). Isso permite que o "quão encolhido"
     um elemento fica possa variar dependendo da largura da tela. Em telas maiores,
     mesmo encolhido, ele pode ser um pouco maior do que no mobile.

   Se esta abordagem ainda deixar o header muito "poluído" em telas minúsculas,
   o próximo passo seria explorar a "Ideia 2": mover os botões de ordenação
   para um menu/modal separado que é acionado por um único botão "Filtros".
   =================================================================================== */
