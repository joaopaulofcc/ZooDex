{"version":3,"file":"static/css/main.68bfc867.css","mappings":"AAeA,sBACE;;GAEC,CAID,8BAAyC,CAmBzC,qBAAsB,CAtBtB,UAAY,CACZ,mBAAoB,CAQpB,uBAAgB,CAAhB,eAAgB,CAChB,KAAM,CAWN,UAAW,CAPX,WAGC,CAHD;;GASF,CAIA,qCAGE,kBAAmB,CAFnB,YAAa,CACb,qBAAsB,CAEtB,SAAW,CAMX,kBAAmB,CAFnB,gBAAiB,CACjB,iBAAkB,CAFlB,gBAAiB,CAIjB,UACF,CAIA,4BAEE,kBAAmB,CAGnB,aAAc,CAJd,YAAa,CAEb,SAAW,CACX,oBAEF,CAGA,oBACE,WAAY,CAEZ,kBAAmB,CADnB,UAEF,CAGA,qBAOE,UAAY,CANZ,+BAAgC,CAEhC,cAAe,CADf,eAAgB,CAIhB,oBAAsB,CAFtB,eAAgB,CAChB,QAGF,CACA,0BAEE,qBACF,CAGA,4BACE,uCAAwC,CAIxC,WAAY,CACZ,kCAAmC,CAOnC,8BAAwC,CAXxC,UAAY,CAQZ,cAAe,CAPf,+BAAgC,CAIhC,eAAiB,CACjB,eAAgB,CAJhB,qBAAuB,CAOvB,wFAC0B,CAH1B,kBAKF,CACA,4EAEE,8CAA+C,CAE/C,8BAAyC,CADzC,sCAEF,CACA,0CACE,6CAA8C,CAC9C,kBACF,CACA,mCAEE,kCACF,CAGA,+BAQE,qBAAsB,CAHtB,kBAAmB,CAFnB,gBAAiB,CACjB,iBAAkB,CAFlB,eAAgB,CAIhB,kBAAoB,CACpB,mBAAqB,CANrB,UAQF,CAGA,2BAIE,wBAAoD,CAApD,kDAAoD,CADpD,kCAAmC,CAMnC,qBAAsB,CAJtB,6BAA8B,CAE9B,iCAAkC,CADlC,cAAe,CAEf,YAAa,CANb,kBAAoB,CAQpB,4DAAgE,CAThE,UAUF,CAEA,wCACE,aAAuC,CAAvC,qCAAuC,CAEvC,iBAAkB,CADlB,UAEF,CAEA,iCACE,mCAAoC,CAEpC,gCACF,CAGA,4BACE,YAAa,CACb,cAAe,CAEf,eAAkB,CADlB,sBAAuB,CAEvB,eACF,CAGA,0BACE;;GAEC,CAID,4CAA6C,CAD7C,wCAAyC,CASzC,8BAAyC,CAXzC,iCAAkC,CAOlC,cAAe,CADf,iCAAkC,CAFlC,eAAiB,CACjB,eAAgB,CAJhB,kBAAoB,CAOpB,2GACoD,CACpD,kBAEF,CAEA,wEAEE,4CAA6C,CAE7C,iCAAkC,CAElC,8BAAwC,CAHxC,UAAY,CAEZ,sCAEF,CACA,wCACE,wCAAyC,CACzC,kBACF,CACA,iCAEE,qCAAsC,CADtC,kCAEF,CAKA,yBACE,sBACE,iBAAkB,CAClB,kBACF,CAGA,qCAIE,kBAAmB,CAHnB,kBAAmB,CACnB,6BAA8B,CAG9B,oBACF,CAEA,oBACE,WACF,CAEA,qBACE,gBACF,CAEA,4BACE,cAAe,CACf,oBACF,CAEA,2BACE,iBACF,CAEA,0BACE,iBAAmB,CACnB,oBACF,CAIA,2DAEE,cAAe,CACf,eACF,CACF,CAGA,0BACE,sBAEE,sBAAuB,CADvB,mBAEF,CACA,qBACE,iBAAkB,CAClB,mBACF,CACA,oBACE,WACF,CACA,+BACE,eACF,CACA,4BACE,cACF,CACF,CC7PA,8BACE;;GAEC,CACD,0CAA2C,CAC3C;;GAEC,CACD,8BAAwC,CAExC,cAAe,CAEf,YAAa,CACb,qBAAsB,CA8BtB,gBAAiB,CAbjB,YAAa,CAfb,eAAgB,CA0BhB,kBAAmB,CAbnB,2DAiBF,CAQA,gFAKE,+BAA0C,CAF1C,sCAIF,CAGA,4CAGE,uGAKF,CAMA,+BAIE,YAAa,CAGb,oBAAsB,CANtB,iBAAkB,CA0BlB,2BAA4B,CAhB5B,qCAA0D,CAR1D,UAyBF,CAKA,qCAIE,yBACF,CAIA,4BAqBE,kBAAmB,CANnB,kCAAmC,CACnC,0BAA2B,CAO3B,wBAGC,CAHD;;GAGC,CAED;;GAEC,CAXD,YAAa,CAdb,WAAY,CAeZ,sBAAuB,CAevB,eAAgB,CAlChB,iBAAkB,CAGlB,UAiCF,CAsBA,6BACE,yBAEF,CAGA,8BACE,aAAc,CAGd,WAAY,CAiBZ,kBAAmB,CAlBnB,UAmBF,CAOA,gCAWE,YAAa,CAEb,qBAAsB,CARtB,WAAY,CAcZ,SAAW,CAJX,6BAA8B,CAd9B,mBAoBF,CAGA,8BAIE,0BAA2B,CAH3B,+BAAgC,CAChC,iBAAkB,CAClB,eAAgB,CAIhB,gBAAiB,CADjB,oBAAsB,CADtB,iBAIF,CAGA,kCAIE,6BAA8B,CAH9B,iCAAkC,CAClC,eAAiB,CACjB,iBAAkB,CAKlB,eAAgB,CAHhB,mBAAqB,CACrB,qBAGF,CAGA,kCAaE,qBAAsB,CAXtB,wCAAyC,CAIzC;;GAEC,CAJD,gBAAkB,CADlB,eAAiB,CAajB,eAAgB,CAfhB,oBAAuB,CAIvB,iBAcF,CAMA,yBACE,8BACE,gBACF,CACA,kCACE,eACF,CACA,+BACE,YAEF,CACA,8BACE,gBACF,CACF,CAGA,0BACE,+BACE,YACF,CACA,8BACE,gBACF,CACF,CC7TA,uCAkDE,eAAW,CA7CX,YAAa,CA6Cb,UAAW,CALX,yDAA4D,CAY5D,eAEF,CAWA,yBACE,uCAIE,UAAW,CADX,yBAKF,CACF,CAIA,yBACE,uCAOE,QAAS,CAJT,yDAKF,CACF,CAIA,0BACE,uCAOE,UAAW,CAJX,yDAWF,CACF,CAIA,0BACE,uCACE,yDAIF,CACF,CCzIA,6LAWC,MAAO,CADP,iBAAkB,CAElB,KACA,CACD,mBACC,eACA,CACD,0DAMG,sBAAuB,CAHzB,wBAAyB,CAEjB,gBAER,CAED,yBACC,gBACD,CAEA,8BACC,yCACA,CAED,wCAEC,aAAc,CACd,4BAA6B,CAF7B,YAGA,CACD,4CAEC,aACA,CAGD,6CAEC,yBAA2B,CAD3B,wBAEA,CACD,8MAMC,yBAA2B,CAD3B,wBAA0B,CAG1B,SAAU,CADV,UAEA,CAED,oCAEC,2BACD,CAEA,sCAEC,wBACA,CACD,sCAGC,iBAAkB,CAClB,uBACD,CACA,yDAEC,iBACD,CACA,mBACC,uCACD,CACA,qBACC,+CACD,CACA,cACC,cAAe,CACf,iBACA,CACD,qBACC,kBACA,CACD,kBAIM,qBAAsB,CAF3B,QAAS,CADT,OAAQ,CAIR,WACA,CAED,0BACC,qBACA,CAED,cAAwB,WAAc,CAEtC,mBAAwB,WAAc,CACtC,sBAAwB,WAAc,CACtC,qBAAwB,WAAc,CACtC,qBAAwB,WAAc,CACtC,sBAA0B,WAAc,CACxC,oBAAwB,WAAc,CAEtC,yBAA2B,WAAc,CACzC,sBAA2B,WAAc,CAEzC,mBAEC,UAAW,CADX,SAEA,CACD,MACC,0BAA2B,CAC3B,oBAAqB,CACrB,iBACA,CAKD,iBAGC,6BAA8B,CAC9B,mBAAoB,CAHpB,iBAAkB,CAClB,WAGA,CACD,6BAIC,mBAAoB,CAFpB,iBAAkB,CAClB,YAEA,CACD,aACC,KACA,CACD,eACC,OACA,CACD,gBACC,QACA,CACD,cACC,MACA,CACD,iBAEC,UAAW,CADX,UAEA,CACD,gCACC,WACA,CACD,8BACC,eACA,CACD,iCACC,kBACA,CACD,+BACC,gBACA,CACD,gCACC,iBACA,CAKD,kCACC,SAAU,CAGF,6BACR,CACD,oDACC,SACA,CACD,uBAGS,oBACR,CACD,0BACC,qBACD,CAEA,0CAGS,iDACR,CACD,iEAIS,eACR,CAED,sCACC,iBACA,CAKD,qBACC,cACA,CACD,cAGC,WACA,CACD,2DAEC,gBACA,CACD,qCAEC,WACA,CACD,iIAGC,WAAY,CAGZ,eACA,CAGD,gHAKC,mBACA,CAED,8KAIC,6BAA8B,CAC9B,mBACA,CAID,mBACC,eAAgB,CAChB,kBACA,CACD,qBACC,aACA,CACD,kBAEC,oBAAiC,CADjC,sBAEA,CAID,mBACC,qDAA2D,CAC3D,cAAe,CACf,gBAAkB,CAClB,eACA,CAKD,aAEC,iBAAkB,CADlB,8BAEA,CACD,eACC,qBAAsB,CACtB,4BAA6B,CAO7B,UAAY,CAHZ,aAAc,CAFd,WAAY,CACZ,gBAAiB,CAEjB,iBAAkB,CAClB,oBAAqB,CALrB,UAOA,CACD,8CAEC,2BAA4B,CAC5B,2BAA4B,CAC5B,aACA,CACD,0CAEC,wBACA,CACD,2BACC,0BAA2B,CAC3B,2BACA,CACD,0BAGC,kBAAmB,CAFnB,6BAA8B,CAC9B,8BAEA,CACD,gCAEC,wBAAyB,CACzB,UAAW,CAFX,cAGA,CAED,8BAEC,WAAY,CACZ,gBAAiB,CAFjB,UAGA,CACD,0CACC,0BAA2B,CAC3B,2BACA,CACD,yCACC,6BAA8B,CAC9B,8BACA,CAID,mDAEC,6CAAmD,CACnD,eACA,CAED,iFACC,cACA,CAKD,wBAEC,eAAgB,CAChB,iBAAkB,CAFlB,0BAGA,CACD,+BACC,48BAAwC,CAExC,WAAY,CADZ,UAEA,CACD,+CACC,4rDAA2C,CAC3C,yBACA,CACD,8CAEC,WAAY,CADZ,UAEA,CACD,qHAEC,YACA,CACD,8DACC,aAAc,CACd,iBACA,CACD,iCAGC,eAAgB,CADhB,UAAW,CADX,wBAGA,CACD,kCAEC,iBAAkB,CADlB,iBAAkB,CAElB,iBACA,CACD,iCACC,cAAe,CACf,iBAAkB,CAClB,OACA,CACD,8BACC,aAAc,CACd,cAAe,CACf,mBACA,CACD,kCAEC,yBAA0B,CAD1B,QAAS,CAET,yBACA,CAGD,2BACC,g9DACA,CAKD,gDACC,eAAgB,CAChB,gBAAoC,CACpC,QACA,CACD,yDAGC,UAAW,CACX,eAAgB,CAFhB,aAGA,CACD,+BACC,oBACA,CACD,0EAEC,yBACA,CACD,0BACC,wBAA0B,CAG1B,cAAgB,CAFhB,gCAAmC,CACnC,SAEA,CACD,qCACC,eACA,CACD,uCACC,iBACA,CACD,4BAQC,gBAAoC,CANpC,qBAAgB,CAAhB,eAAgB,CAKX,qBAAsB,CAJ3B,eAAgB,CAChB,mBAAoB,CAKpB,wBAAyB,CAJzB,kBAKA,CACD,8CAEC,kBAAmB,CADnB,yBAA0B,CAE1B,eACA,CACD,+DACC,4BACA,CAED,+GAGC,eACA,CACD,mEAGC,2BAA4B,CAD5B,sBAEA,CAKD,eAGC,kBAAmB,CAFnB,iBAAkB,CAClB,iBAEA,CACD,+BAGC,kBAAmB,CAFnB,WAAY,CACZ,eAEA,CACD,uBAGC,cAAe,CACf,mBAAoB,CAFpB,eAAgB,CADhB,0BAA2B,CAI3B,cACA,CACD,yBAEC,cACA,CACD,6BAEC,WAAY,CAEZ,QAAS,CAET,iBAAkB,CADlB,eAAgB,CAEhB,eAAgB,CAChB,mBAAoB,CALpB,iBAAkB,CAFlB,UAQA,CACD,mBAEC,WAAY,CAGZ,mBAAoB,CAFpB,WAAY,CAGZ,mBAAoB,CAKZ,uBAAwB,CAVhC,UAWA,CACD,kDAEC,eAAiB,CAEjB,2BAAsC,CADtC,UAEA,CACD,gDAWC,gBAAuB,CAPvB,WAAY,CAKZ,aAAc,CADd,wCAA2C,CAD3C,WAAY,CANZ,iBAAkB,CAElB,OAAQ,CAER,iBAAkB,CAKlB,oBAAqB,CARrB,KAAM,CAIN,UAMA,CACD,4GAEC,aACA,CACD,wBACC,aACA,CAED,8CACC,UACA,CACD,kCAIC,sHAAuH,CACvH,6GAAiH,CAHjH,aAAc,CADd,UAKA,CAED,4JAIC,qBACA,CAKD,kBACC,eAAgB,CAChB,qBACA,CAKD,iBAGC,qBAAsB,CACtB,qBAAsB,CACtB,iBAAkB,CAQlB,0BAAqC,CAPrC,UAAW,CAJX,WAAY,CAUZ,mBAAoB,CAXpB,iBAAkB,CAOlB,wBAAyB,CAGzB,gBAAiB,CAJjB,kBAOA,CACD,qCACC,cAAe,CACf,mBACA,CACD,sHAOC,gBAAuB,CADvB,sBAA6B,CAE7B,UAAW,CAHX,mBAAoB,CADpB,iBAKA,CAID,wBACC,cACD,CACA,qBACC,eACD,CACA,2DAEC,QAAS,CACT,gBACA,CACD,4BAGC,qBAAsB,CAFtB,QAAS,CACT,mBAEA,CACD,+BAIC,wBAAyB,CADzB,gBAAiB,CADjB,gBAAiB,CADjB,KAIA,CACD,sBACC,gBACD,CACA,uBACC,eACD,CACA,2DAGC,eAAgB,CADhB,OAEA,CACD,6BAGC,sBAAuB,CADvB,kBAAmB,CADnB,OAGA,CACD,8BAGC,uBAAwB,CAFxB,MAAO,CACP,iBAEA,CAID,aAEC,iBACC,gCAAiC,CACjC,wBACA,CACD,CCzoBD,yCAGE,iDAAkD,CAFlD,oBAAqB,CACrB,mBAEF,CAEA,oDACE,kBAAmB,CACnB,eAAgB,CAChB,gBACF,CAIA,kCAME,8CAA+C,CAH/C,0BAA2B,CAK3B,oBAAqB,CAPrB,+BAAgC,CAChC,gBAAiB,CAGjB,kBAAmB,CADnB,YAAa,CAGb,oBAEF,CACA,iDAGE,eAAgB,CADhB,kBAEF,CAIA,mCAEE,6BAA8B,CAD9B,eAAiB,CAGjB,eAAgB,CADhB,oBAAqB,CAGrB,gBAAiB,CACjB,iBAAkB,CAFlB,eAAgB,CAGhB,iBACF,CAWA,gCAYE,wBAAyB,CAJzB,0CAA2C,CAC3C;;GAEC,CAED,8BAAwC,CAZxC,YAAa,CAMb,uBAAkB,CAJlB,eAAgB,CAWhB,iBAAkB,CAZlB,UAAW,CAaX,SAEF,CAEA,6HAIE,kBAAmB,CAEnB,6BAA8B,CAJ9B,YAAa,CAKb,iBAAkB,CAFlB,WAAY,CAFZ,sBAKF,CAKA,yCAEE,eAAiB,CADjB,iBAAkB,CAGlB,cAAe,CADf,iBAEF,CAGA,sCAEE,6BAA8B,CAG9B,+BAAgC,CAJhC,eAAgB,CAGhB,eAAgB,CADhB,mBAGF,CAGA,iCAGE,YAAa,CACb,cAAe,CAEf,YAAa,CADb,sBAAuB,CAJvB,eAAgB,CAOhB,gBAAiB,CACjB,iBAAkB,CAFlB,eAAgB,CALhB,cAQF,CAGA,sCACE,wBAA6B,CAE7B,0CAA2C,CAC3C,wCAAyC,CACzC,6BAA8B,CAC9B,cAAe,CAGf,eAAiB,CAPjB,mBAAsB,CAKtB,6GAGF,CAGA,4CACE,sCAAuC,CACvC,oBAGC,CAHD;;GAGC,CACD,6BAA8B,CAC9B,0BACF,CAIA,gDACE;;GAEC,CAED,0CAA2C,CAG3C,8BAAyC,CAJzC,UAAY,CAEZ,eAAiB,CACjB,qBAEF,CAGA,+BAEE,6BAA8B,CAC9B,gBAAkB,CAFlB,iBAGF,CAKA,yBACE,gCACE,YACF,CACA,kCACE,gBACF,CACA,sCACE,cACF,CACF,CAGA,yBACE,gCACE,YAAa,CACb,eACF,CACA,4EAEE,cAAe,CACf,eACF,CACF,CAGA,0BACE,gCACE,YAAa,CACb,eACF,CACA,kCACE,iBACF,CACA,mCACE,cACF,CACF,CCnMA,qCACE,qCAAsC,CAGtC,kCAAmC,CACnC,yCAA0C,CAE1C,eAAgB,CALhB,YAUF,CAGA,gCAcE,kBAAmB,CAbnB,uCAAwC,CAExC,WAAY,CAEZ,kCAAmC,CAHnC,UAAY,CAOZ,cAAe,CAIf,mBAAoB,CAPpB,+BAAgC,CAChC,eAAiB,CACjB,eAAiB,CAOjB,SAAW,CAHX,kBAAmB,CARnB,oBAAsB,CAOtB,wFAKF,CAEA,oFAEE,8CAA+C,CAE/C,0BAAqC,CADrC,0BAEF,CAEA,8CACE,6CAA8C,CAC9C,kBACF,CAKA,kCAEE,oBAAqB,CACrB,mBAAoB,CAFpB,iBAMF,CAIA,yCAcE,uCAAwC,CACxC,sBAA6B,CAL7B,iBAAkB,CAFlB,cAAe,CACf,aAAc,CANd,YAAa,CAGb,oBAAqB,CAFrB,gBAAiB,CACjB,iBAAkB,CAHlB,eAAgB,CAWhB,YAAa,CANb,iBAAkB,CASlB,2DAA+D,CAf/D,UAgBF,CAEA,+CAEE,qBACF,CAEA,uDACE,mCAAoC,CAEpC,2EAEF,CAGA,qCAME,qBAAsB,CACtB,+BAAuC,CAJvC,WAAY,CAFZ,iBAAkB,CAIlB,2BAA4B,CAD5B,sDAA+D,CAF/D,UAMF,CAGA,4CACE,yBACF,CAGA,oCAQE,kBAAmB,CAJnB,0BAA2B,CAC3B,kCAAmC,CAMnC,wBAAgD,CAAhD,8CAAgD,CAFhD,qBAAsB,CAHtB,YAAa,CAHb,WAAY,CAIZ,sBAAuB,CAGvB,eAAgB,CAThB,iBAAkB,CAClB,UAUF,CAEA,wCAEE,WAAY,CACZ,gBAAiB,CAFjB,UAMF,CAMA,oCACE,yBACF,CAGA,sCAGE,kBAAmB,CAKnB,wBAAyB,CAKzB,2CAA4C,CAJ5C,qBAAsB,CAEtB,qBAAsB,CALtB,6BAA8B,CAL9B,YAAa,CAMb,eAAiB,CAFjB,WAAY,CAHZ,sBAAuB,CAQvB,YAAa,CAEb,iBAAkB,CARlB,UAUF,CAKA,sCAWE,wBAAyB,CALzB,kCAAmC,CAInC,yCAA0C,CAD1C,aAAc,CANd,WAAY,CAKZ,oBAAqB,CADrB,gBAAiB,CAAE,iBAAkB,CAHrC,gBAAiB,CAFjB,eAAgB,CAGhB,gBAAiB,CAJjB,UAWF,CAIA,qCAKE,0BAA2B,CAJ3B,+BAAgC,CAChC,gBAAiB,CACjB,eAAgB,CAGhB,gBAAiB,CAFjB,qBAGF,CACA,0CAKE,aAAc,CAEd,aAAc,CANd,iCAAkC,CAClC,gBAAiB,CAEjB,iBAAkB,CADlB,eAAgB,CAMhB,eAAgB,CAHhB,iBAAmB,CAEnB,UAEF,CACA,6CACE,iBACF,CAGA,sCAEE,wCAAyC,CAIzC,8BAAsC,CAHtC,6BAA8B,CAE9B,oBAAqB,CAErB,eAAgB,CAHhB,kBAAmB,CAHnB,oBAOF,CACA,yCAEE,gBAAiB,CACjB,eAAgB,CAFhB,QAGF,CAGA,2CAGE,kBAAmB,CAFnB,YAAa,CAKb,cAAe,CAFf,OAAQ,CAFR,sBAAuB,CAGvB,kBAEF,CACA,gCAQE,sBAAoC,CALpC,wCAAyC,CACzC,6BAA8B,CAF9B,gBAAkB,CAGlB,eAAiB,CACjB,cAAe,CALf,mBAAsB,CAMtB,iBAAkB,CAElB,yDACF,CAEA,uCAEE,oCAAqC,CADrC,kBAAmB,CAGnB,+BAAuC,CADvC,oBAAqB,CAErB,SACF,CAEA,kFAEE,8BAAsC,CADtC,oBAAqB,CAErB,SACF,CAIA,mCAGE,iDAAkD,CAFlD,oBAAqB,CACrB,mBAEF,CACA,8CACE,kBAAmB,CAAE,eAAgB,CAAE,gBACzC,CAGA,kCAME,8CAA+C,CAH/C,0BAA2B,CAK3B,oBAAqB,CAPrB,+BAAgC,CAChC,gBAAiB,CAGjB,qBAAsB,CADtB,YAAa,CAGb,oBAEF,CACA,4DAEE,aAAc,CADd,mBAAqB,CAErB,oBACF,CAGA,qCAGE,6BAA8B,CAF9B,+BAAgC,CAChC,iBAAkB,CAIlB,eAAgB,CADhB,mBAAqB,CADrB,iBAGF,CAGA,0BAIE,YAAa,CACb,qBAAsB,CACtB,SAAW,CALX,eAAgB,CAEhB,iBAAmB,CADnB,cAKF,CAEA,8BACE,wBAAyB,CAGzB,6BAA4D,CAA5D,0DAA4D,CAD5D,wCAAyC,CAMzC,8BAAsC,CADtC,gBAAkB,CADlB,eAAgB,CALhB,oBAQF,CACA,qCACE,iCAAkC,CAClC,eACF,CACA,wDAEE,4BAA6B,CAD7B,kBAEF,CAGA,sCAEE,0BAA2B,CAE3B,cAAgB,CAHhB,eAAgB,CAKhB,mBAAqB,CAHrB,oBAAsB,CAEtB,wBAEF,CACA,uCAEE,6BAA8B,CAC9B,aAAc,CAFd,aAGF,CAGA,yCAGE,6BAA8B,CAD9B,gBAAiB,CADjB,oBAGF,CAIA,iCAEE,6BAA8B,CAD9B,eAAiB,CAIjB,iBAAkB,CADlB,oBAAqB,CADrB,iBAGF,CAEA,sCAIE,gBAAY,CAHZ,YAAa,CAGb,WAAY,CADZ,wDAA2D,CAE3D,oBACF,CACA,kCAGE,gBAAmB,CAKnB,wBAAyB,CAHzB,kCAAmC,CACnC,yCAA0C,CAF1C,gBAAiB,CAGjB,mDAA+G,CAN/G,UAQF,CACA,2CACE,cAAe,CACf,iBACF,CACA,iDAEE,+BAAuC,CADvC,sCAEF,CACA,uDAME,0BAAoC,CAEpC,iBAAkB,CAHlB,UAAY,CAJZ,YAAa,CAQb,gBAAiB,CANP,QAAS,CAQnB,SAAU,CAJV,aAAe,CAGf,mBAAoB,CARpB,iBAAkB,CAClB,OAAQ,CACR,yCAQF,CAIA,mCACE,gBACF,CACA,qCAGE,aAAc,CADd,gBAAkB,CAElB,eAAgB,CAHhB,mBAIF,CACA,0CAEE,iCAAkC,CADlC,eAEF,CACA,qCACE,mCAAoC,CAEpC,eAAgB,CADhB,oBAAqB,CAErB,oBACF,CACA,8FAGE,0BAA2B,CAD3B,yBAEF,CAKA,+BAEE,6BAA8B,CAC9B,gBAAkB,CAFlB,iBAAkB,CAGlB,eACF,CAIA,sCAQE,kBAAmB,CAHnB,0BAAwC,CAMxC,qBAAsB,CACtB,eAAgB,CANhB,YAAa,CAFb,YAAa,CAGb,sBAAuB,CALf,MAAO,CAQf,YAAa,CATb,cAAe,CACf,KAAM,CACN,WAAY,CAMZ,YAAmC,CAAnC,iCAIF,CAGA,6CAGE,kBAAmB,CAInB,cAAe,CALf,YAAa,CAIb,WAAY,CAFZ,sBAAuB,CAHvB,iBAAkB,CAIlB,UAGF,CAGA,6CAGE,kBAAmB,CAInB,qBAAsB,CADtB,2BAAsC,CALtC,YAAa,CACb,sBAAuB,CAGvB,eAAgB,CADhB,cAIF,CAGA,mCAQE,sBAAuB,CAFvB,iBAAkB,CALlB,aAAc,CAEd,gBAAiB,CADjB,cAAe,CAGf,kBAAmB,CAEnB,wBAAiB,CAAjB,gBAEF,CAGA,gFAGE,0BAAuC,CAEvC,sBAA0C,CAC1C,iBAAkB,CAWlB,8BAAqC,CAbrC,UAAY,CAQZ,cAAe,CAHf,cAAe,CADf,WAAY,CAEZ,gBAAiB,CAKjB,UAAY,CACZ,YAAa,CAdb,iBAAkB,CASlB,iBAAkB,CAGlB,qFAA2F,CAP3F,UAAW,CAMX,YAKF,CAEA,wMAEE,0BAAuC,CAGvC,kBAAsC,CAFtC,SAAU,CACV,qBAEF,CAEA,4GACI,yBAAwD,CAAxD,sDAAwD,CACxD,kBACJ,CAGA,wCACE,SAAU,CACV,OAAQ,CACR,0BACF,CAEA,wCACE,UAAW,CACX,OAAQ,CACR,0BACF,CAEA,yCAGgD,gBAAiB,CAAlD,WAAY,CAAE,gBAAiB,CAD5C,UAAW,CADX,QAAS,CAET,UACF,CAIA,yBACE,qCACE,mBACF,CACA,qCACE,gBACF,CACA,0CACE,gBACF,CACA,yCACE,iBACF,CACA,gCACE,eAAiB,CAA2B,cAAe,CAAxC,oBACrB,CACA,kCACE,iBACF,CACA,qCACE,iBACF,CACA,8BACE,cAAe,CAAE,oBACnB,CACA,kCAEE,eACF,CACA,gFAAyF,gBAAiB,CAAlD,WAAY,CAAE,gBAAiB,CAA5C,UAAiE,CAC5G,wCAAsB,SAAY,CAClC,wCAAsB,UAAa,CACnC,yCAA6F,gBAAiB,CAAlD,WAAY,CAAE,gBAAiB,CAAzD,UAAW,CAAtB,QAAS,CAAe,UAAiE,CAClH,CAEA,0BACE,yCAAyC,YAAa,CAA/B,eAAiC,CACxD,qCAAmB,cAAiB,CACpC,0CAAwB,gBAAmB,CAI7C,CAGA,yBACE,uCAAgD,gBAAiB,CAA/B,WAAY,CAAqB,gBAAiB,CAA/D,UAAiE,CACtF,wCAAsB,QAAW,CACjC,wCAAsB,SAAY,CAClC,yCAAwE,gBAAiB,CAA/B,WAAY,CAAqB,gBAAiB,CAA3E,SAAU,CAApB,OAAQ,CAAc,UAAiE,CAC9G,sCAAoB,WAAc,CAElC,qCAAmB,kBAAsB,CACzC,kCAAgB,iBAAoB,CACpC,qCAAmB,gBAAmB,CACtC,0CAAwB,iBAAoB,CAC5C,yCAAyC,YAAa,CAAE,oBAAqB,CAAtD,eAAwD,CAC/E,kCAAgB,cAAiB,CACnC,CCnkBA,sBAiBE,qBAAyB,CAKzB,aAAc,CAed,gCAIC,CAJD;;GAIC,CAGD,iBAAmB,CAEnB,eAAgB,CAZhB,eAAgB,CApBhB,mBAAoB,CAZpB,iBA8CF,CAMA,wBAKE,mBAAqB,CADrB,gBAYF,CAIA,0BAUE,0BAA8B,CAM9B,aAAc,CAFd,gBAAkB,CAKlB,eAAgB,CAlBhB,kBAAmB,CAEnB,gBAiBF,CAKA,4BAKE,mBAAqB,CADrB,gBAEF,CCnGA,MAGE,wCAA2C,CAG3C,+CAAkD,CAIlD,wBAAyB,CACzB,0BAA2B,CAC3B,0BAA2B,CAC3B,uBAAwB,CACxB,8BAA+B,CAC/B,yBAA0B,CAC1B,gCAAiC,CACjC,oBAAwB,CACxB,wBAKC,CACD,4BAA6B,CAC7B,qBAAsB,CACtB,uBAAwB,CAKxB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CACnB,+BAAmC,CAInC,mBAAoB,CACpB,yBAA0B,CAG1B,sBAAuB,CACvB,qBAAsB,CACtB,sBAAuB,CAGvB,oBAAqB,CACrB,oBAAqB,CACrB,sBACF,CAKA,KACE,cAAe,CAGf,sBACF,CAEA,KAgBE,kCAAmC,CACnC,iCAAkC,CAblC,wBAEC,CAFD;;GAEC,CACD,aAA8B,CAA9B,6BAA8B,CAN9B,wCAEC,CAFD;;GAEC,CAOD,eAAgB,CAFhB,QAAS,CAYT,gBAIF,CAMA,WARE,YAAa,CACb,qBAaF,CANA,MAGE,WAAY,CAEZ,UACF,CASA,oBAEE,WAAY,CADZ,UAEF,CACA,0BAEE,kBAAmB,CACnB,kBACF,CACA,0BAEE,kBAAmB,CAEnB,wBAAyB,CADzB,kBAEF,CACA,gCAEE,eACF,CASA,iBAME,0BAKC,CAMD,QAAS,CAJT,4BAEC,CAFD,oBAEC,CAZD,UAAW,CAeX,WAAY,CAbZ,eAAgB,CAchB,SAAU,CAlBV,2BAA6B,CAe7B,kBAAmB,CAZnB,SAgBF,CAOA,gCAKE,aAA8B,CAA9B,6BAA8B,CAF9B,gBAAiB,CAIjB,kBAAmB,CADnB,eAAgB,CAFhB,mBAAmD,CAAnD,kDAAmD,CAFnD,iBAMF,CAEA,eAIE,wBAAyB,CACzB,wBAAyB,CACzB,iBAAyC,CAAzC,wCAAyC,CALzC,aAEC,CAFD;;GAMF","sources":["components/Header.module.css","components/AnimalCard.module.css","components/AnimalList.module.css","../node_modules/.pnpm/leaflet@1.9.4/node_modules/leaflet/dist/leaflet.css","components/MapComponent.module.css","components/AnimalDetail.module.css","components/Footer.module.css","index.css"],"sourcesContent":["/* Caminho: src/components/Header.module.css */\r\n\r\n/* ===================================================================================\r\n   ARQUIVO: Header.module.css\r\n   DESCRIÇÃO: Estilos CSS específicos para o componente Header.\r\n              Este arquivo utiliza CSS Modules, o que significa que as classes\r\n              definidas aqui são \"escopadas\" localmente para o Header.jsx.\r\n              Isso é ótimo para evitar conflitos de nomes de classes com outros\r\n              componentes da aplicação.\r\n              Podemos usar variáveis CSS globais (definidas em :root no src/index.css)\r\n              para manter a consistência do design (cores, fontes, etc.).\r\n   =================================================================================== */\r\n\r\n/* --- ESTILO PRINCIPAL DO CABEÇALHO (.header) --- */\r\n/* Aplica-se à tag <header> no Header.jsx. */\r\n.header {\r\n  background-color: var(\r\n    --color-primary\r\n  ); /* Cor de fundo verde escura (variável global). */\r\n  color: white; /* Cor padrão do texto dentro do cabeçalho será branca, para contraste. */\r\n  padding: 1rem 1.5rem; /* Espaçamento interno: 1rem (16px) no topo e na base,\r\n                           1.5rem (24px) nas laterais. Este é o padding base (mobile-first). */\r\n  box-shadow: 0 3px 7px rgba(0, 0, 0, 0.18); /* Sombra sutil abaixo do cabeçalho para dar profundidade.\r\n                                                (deslocamento-x | deslocamento-y | raio-do-blur | cor-com-opacidade) */\r\n\r\n  /* POSICIONAMENTO PEGAJOSO (STICKY):\r\n     Faz com que o cabeçalho permaneça fixo no topo da janela do navegador\r\n     quando o usuário rola a página para baixo. */\r\n  position: sticky;\r\n  top: 0; /* Define que o cabeçalho deve \"grudar\" a 0 pixels do topo da viewport. */\r\n  /* 'left: 0;' e 'right: 0;' podem ser adicionados para garantir que se estenda\r\n     por toda a largura se o elemento pai não o fizer, mas geralmente não é necessário\r\n     para um <header> que é filho direto do #root ou de um container de largura total. */\r\n  z-index: var(\r\n    --z-index-header,\r\n    100\r\n  ); /* Ordem de empilhamento. Um z-index maior fica \"na frente\"\r\n                                          de elementos com z-index menor. Garante que o header\r\n                                          fique sobre outros conteúdos da página ao rolar.\r\n                                          Usamos uma variável global ou um valor padrão. */\r\n  width: 100%; /* Garante que o header ocupe toda a largura da viewport. */\r\n  box-sizing: border-box; /* Garante que o padding não aumente a largura total do header. */\r\n}\r\n\r\n/* --- WRAPPER PARA O CONTEÚDO PRINCIPAL (LOGO, TÍTULO, BOTÃO SURPRESA) (.headerContentWrapper) --- */\r\n/* Este <div> ajuda a agrupar e alinhar os elementos principais do cabeçalho. */\r\n.headerContentWrapper {\r\n  display: flex; /* Ativa o layout Flexbox para os itens filhos. */\r\n  flex-direction: column; /* Em telas pequenas (mobile-first), os itens são empilhados verticalmente. */\r\n  align-items: center; /* Centraliza os itens horizontalmente dentro do wrapper (quando em coluna). */\r\n  gap: 0.8rem; /* (aprox. 13px) Espaço entre os itens flex (entre o bloco logo/título e o botão). */\r\n\r\n  /* Controla a largura máxima e centraliza este wrapper dentro do .header. */\r\n  max-width: 1200px; /* Largura máxima para o conteúdo do cabeçalho (pode ser var(--container-max-width)). */\r\n  margin-left: auto; /* Truque para centralizar um bloco com max-width. */\r\n  margin-right: auto;\r\n  margin-bottom: 1rem; /* Espaço abaixo deste grupo, antes do campo de busca. */\r\n  width: 100%; /* Para ocupar o espaço do .header, respeitando o max-width. */\r\n}\r\n\r\n/* --- CONTAINER DO LOGO E TÍTULO (.logoAndTitle) --- */\r\n/* Este <div> agrupa o logo e o título para mantê-los juntos visualmente. */\r\n.logoAndTitle {\r\n  display: flex; /* Alinha o logo e o título lado a lado (horizontalmente). */\r\n  align-items: center; /* Centraliza verticalmente o logo e o título um em relação ao outro. */\r\n  gap: 0.8rem; /* Espaço entre a imagem do logo e o texto do título. */\r\n  text-decoration: none; /* Remove sublinhado se este grupo for um link. */\r\n  color: inherit; /* Faz com que o texto herde a cor do pai (útil se for um link). */\r\n}\r\n\r\n/* --- ESTILO DO LOGOTIPO (.logo) --- */\r\n.logo {\r\n  height: 45px; /* Altura do logo. A largura se ajustará proporcionalmente (width: auto;). */\r\n  width: auto; /* Garante que a largura seja automática para manter a proporção da imagem. */\r\n  object-fit: contain; /* Garante que a imagem inteira caiba, sem cortar. */\r\n}\r\n\r\n/* --- ESTILO DO TÍTULO PRINCIPAL (.title) --- */\r\n.title {\r\n  font-family: var(--font-primary); /* Fonte Nunito (variável CSS global). */\r\n  font-weight: 800; /* Peso \"Extra Bold\". */\r\n  font-size: 2rem; /* Tamanho da fonte (para mobile/telas pequenas). */\r\n  line-height: 1.1; /* Altura da linha um pouco mais justa para títulos grandes. */\r\n  margin: 0; /* Remove margens padrão que a tag <h1> pode ter. */\r\n  letter-spacing: -0.5px; /* Leve ajuste no espaçamento entre letras. */\r\n  color: white; /* Garante que o título seja branco. */\r\n}\r\n.title span {\r\n  /* Para o emoji, se ele estiver dentro de um span */\r\n  vertical-align: middle; /* Tenta alinhar melhor o emoji com o texto. */\r\n}\r\n\r\n/* --- ESTILO DO BOTÃO \"ANIMAL SURPRESA\" (.randomButton) --- */\r\n.randomButton {\r\n  background-color: var(--color-secondary); /* Laranja (variável global). */\r\n  color: white;\r\n  font-family: var(--font-primary);\r\n  padding: 0.65rem 1.3rem; /* Espaçamento interno. */\r\n  border: none;\r\n  border-radius: var(--border-radius); /* Cantos mais arredondados. */\r\n  font-size: 0.9rem;\r\n  font-weight: 700; /* Bold. */\r\n  white-space: nowrap; /* Impede que o texto do botão quebre em várias linhas. */\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease-out, transform 0.15s ease-out,\r\n    box-shadow 0.2s ease-out;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombra sutil no botão. */\r\n}\r\n.randomButton:hover,\r\n.randomButton:focus-visible {\r\n  background-color: var(--color-secondary-darker); /* Laranja mais escuro. */\r\n  transform: scale(1.03) translateY(-1px); /* Leve aumento e elevação. */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* Sombra mais pronunciada. */\r\n}\r\n.randomButton:focus-visible {\r\n  outline: 2px solid var(--color-primary-darker); /* Contorno verde escuro para foco. */\r\n  outline-offset: 2px;\r\n}\r\n.randomButton:active {\r\n  /* Quando o botão está sendo pressionado */\r\n  transform: scale(0.98) translateY(0); /* Leve \"afundada\". */\r\n}\r\n\r\n/* --- CONTAINER DO CAMPO DE BUSCA (.searchContainer) --- */\r\n.searchContainer {\r\n  width: 100%;\r\n  max-width: 640px; /* Uma largura máxima razoável para o campo de busca. */\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 1rem; /* Espaço abaixo do campo de busca, antes dos botões de ordenação. */\r\n  padding-left: 0.5rem; /* Pequeno padding lateral para telas muito estreitas. */\r\n  padding-right: 0.5rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* --- ESTILO DO CAMPO DE INPUT DE BUSCA (.searchInput) --- */\r\n.searchInput {\r\n  width: 100%;\r\n  padding: 0.8rem 1rem; /* Espaçamento interno um pouco maior. */\r\n  border-radius: var(--border-radius);\r\n  border: 2px solid var(--color-border-light, #ced4da); /* Borda cinza clara, um pouco mais grossa. */\r\n  color: var(--color-text-light); /* Cor do texto digitado. */\r\n  font-size: 1rem; /* Tamanho da fonte do input. */\r\n  font-family: var(--font-secondary); /* Fonte secundária para o input. */\r\n  outline: none; /* Remove o contorno padrão do navegador ao focar. */\r\n  box-sizing: border-box;\r\n  transition: border-color 0.2s ease-out, box-shadow 0.2s ease-out;\r\n}\r\n/* Estilo para o texto placeholder (dica dentro do input). */\r\n.searchInput::placeholder {\r\n  color: var(--color-text-muted, #6c757d); /* Cor cinza médio. */\r\n  opacity: 0.9; /* Levemente transparente. */\r\n  font-style: italic;\r\n}\r\n/* Efeito visual quando o campo de busca está focado. */\r\n.searchInput:focus {\r\n  border-color: var(--color-secondary); /* Muda a cor da borda para laranja. */\r\n  /* Adiciona um \"glow\" (brilho) sutil ao redor do input. */\r\n  box-shadow: 0 0 0 3.5px rgba(239, 108, 0, 0.25); /* Cor secundária com transparência. */\r\n}\r\n\r\n/* --- CONTAINER DOS BOTÕES DE ORDENAÇÃO (.sortControls) --- */\r\n.sortControls {\r\n  display: flex; /* Usa Flexbox para alinhar os botões. */\r\n  flex-wrap: wrap; /* Permite que os botões quebrem para a próxima linha se não couberem todos. */\r\n  justify-content: center; /* Centraliza os botões horizontalmente. */\r\n  gap: 0.6rem 0.8rem; /* Espaço: 0.6rem vertical, 0.8rem horizontal entre os botões. */\r\n  padding: 0 0.5rem; /* Padding lateral para evitar que os botões colem nas bordas. */\r\n}\r\n\r\n/* --- ESTILO DOS BOTÕES DE ORDENAÇÃO (.sortButton) --- */\r\n.sortButton {\r\n  background-color: var(\r\n    --color-bg-light\r\n  ); /* Fundo cinza claro, para se destacar do header. */\r\n  color: var(--color-primary-darker); /* Texto verde escuro. */\r\n  padding: 0.5rem 1rem; /* Espaçamento interno. */\r\n  border-radius: var(--border-radius-small);\r\n  border: 1px solid var(--color-primary-darker); /* Borda verde escura. */\r\n  font-size: 0.8rem; /* Tamanho da fonte. */\r\n  font-weight: 600; /* Semi-bold. */\r\n  font-family: var(--font-secondary);\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease-out, color 0.2s ease-out,\r\n    transform 0.15s ease-out, box-shadow 0.2s ease-out;\r\n  white-space: nowrap; /* Evita quebra de linha no texto do botão. */\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n}\r\n/* Efeitos ao passar o mouse ou focar no botão de ordenação. */\r\n.sortButton:hover,\r\n.sortButton:focus-visible {\r\n  background-color: var(--color-primary-darker); /* Fundo verde escuro. */\r\n  color: white; /* Texto branco. */\r\n  border-color: var(--color-primary); /* Borda verde principal. */\r\n  transform: translateY(-1px) scale(1.02);\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n.sortButton:focus-visible {\r\n  outline: 2px solid var(--color-secondary); /* Contorno laranja para foco. */\r\n  outline-offset: 2px;\r\n}\r\n.sortButton:active {\r\n  transform: translateY(0) scale(0.98);\r\n  background-color: var(--color-primary);\r\n}\r\n\r\n/* --- MEDIA QUERIES (AJUSTES PARA TELAS MAIORES) --- */\r\n/* Media Query: Aplica estes estilos quando a largura da tela é 640 pixels ou maior.\r\n   Este é um breakpoint comum, frequentemente chamado de 'sm' (small) em frameworks como Tailwind. */\r\n@media (min-width: 640px) {\r\n  .header {\r\n    padding-left: 2rem; /* Aumenta o padding lateral do cabeçalho em telas maiores. */\r\n    padding-right: 2rem;\r\n  }\r\n\r\n  /* No .headerContentWrapper, mudamos a direção do flex para linha e ajustamos o alinhamento. */\r\n  .headerContentWrapper {\r\n    flex-direction: row; /* Itens (logo/título e botão surpresa) agora ficam lado a lado. */\r\n    justify-content: space-between; /* Coloca espaço entre o grupo logo/título e o botão surpresa,\r\n                                       empurrando-os para as extremidades. */\r\n    align-items: center; /* Centraliza verticalmente os itens na linha. */\r\n    margin-bottom: 1.5rem; /* Aumenta um pouco o espaço abaixo deste grupo. */\r\n  }\r\n\r\n  .logo {\r\n    height: 50px; /* Logo um pouco maior em telas maiores. */\r\n  }\r\n\r\n  .title {\r\n    font-size: 2.4rem; /* Título principal maior. */\r\n  }\r\n\r\n  .randomButton {\r\n    font-size: 1rem; /* Botão \"Animal Surpresa\" com fonte maior. */\r\n    padding: 0.7rem 1.5rem; /* Botão maior. */\r\n  }\r\n\r\n  .searchInput {\r\n    font-size: 1.05rem; /* Fonte do input de busca um pouco maior. */\r\n  }\r\n\r\n  .sortButton {\r\n    font-size: 0.875rem; /* Botões de ordenação com fonte maior (text-sm do Tailwind). */\r\n    padding: 0.6rem 1.1rem; /* Botões de ordenação maiores. */\r\n  }\r\n\r\n  /* Remove o padding lateral extra dos containers de busca e ordenação em telas maiores,\r\n     pois o .header já tem um padding lateral maior. */\r\n  .searchContainer,\r\n  .sortControls {\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n  }\r\n}\r\n\r\n/* Media Query para telas ainda maiores (ex: desktops). */\r\n@media (min-width: 1024px) {\r\n  .header {\r\n    padding-top: 1.25rem; /* Padding superior e inferior um pouco maior. */\r\n    padding-bottom: 1.25rem;\r\n  }\r\n  .title {\r\n    font-size: 2.75rem; /* Título ainda maior. */\r\n    letter-spacing: -1px; /* Espaçamento entre letras mais \"apertado\" para títulos grandes. */\r\n  }\r\n  .logo {\r\n    height: 55px;\r\n  }\r\n  .searchContainer {\r\n    max-width: 720px; /* Campo de busca pode ser um pouco mais largo. */\r\n  }\r\n  .sortControls {\r\n    gap: 0.7rem 1rem; /* Aumenta um pouco o espaçamento entre os botões de ordenação. */\r\n  }\r\n}\r\n\r\n/* ===================================================================================\r\n   NOTAS FINAIS PARA OS ALUNOS SOBRE ESTE CSS:\r\n\r\n   - Mobile-First: Os estilos base são definidos para telas pequenas primeiro.\r\n     Depois, usamos '@media (min-width: ...)' para adicionar ou sobrescrever estilos\r\n     para telas progressivamente maiores. Esta é uma abordagem comum e recomendada.\r\n\r\n   - Variáveis CSS (Custom Properties):\r\n     O uso de `var(--nome-da-variavel)` (ex: `var(--color-primary)`) é crucial\r\n     para manter um design consistente e fácil de atualizar. Se a cor primária\r\n     precisar mudar, você só a altera em um lugar (`:root` no `index.css`).\r\n\r\n   - Flexbox (`display: flex`):\r\n     Uma ferramenta poderosa para alinhar e distribuir espaço entre itens em um container.\r\n     Propriedades chave usadas aqui: `flex-direction`, `align-items`, `justify-content`, `gap`.\r\n\r\n   - CSS Modules: Lembre-se que `styles.algumaCoisa` no JSX se refere a uma classe\r\n     `.algumaCoisa` neste arquivo, mas o nome da classe no HTML final será único\r\n     (ex: `Header_algumaCoisa__hash123`).\r\n\r\n   - Pseudo-classes (:hover, :focus-visible, :active):\r\n     Essenciais para fornecer feedback visual ao usuário sobre interações.\r\n     `:focus-visible` é particularmente importante para acessibilidade, mostrando\r\n     estilos de foco apenas quando o usuário navega via teclado.\r\n\r\n   - Transições (`transition`):\r\n     Usadas para suavizar mudanças de estilo (ex: mudança de cor de fundo no hover),\r\n     tornando a interface mais agradável.\r\n\r\n   - Acessibilidade (Considerações de Design):\r\n     - Contraste de cores: Garantir que o texto seja legível sobre a cor de fundo.\r\n     - Tamanho do clique/toque: Botões e inputs devem ter um tamanho razoável.\r\n     - Feedback de foco claro.\r\n   =================================================================================== */\r\n","/* Caminho: src/components/AnimalCard.module.css */\r\n\r\n/* ===================================================================================\r\n   ARQUIVO: AnimalCard.module.css\r\n   DESCRIÇÃO: Estilos CSS específicos para o componente AnimalCard.\r\n              Como este é um \"CSS Module\" (devido à extensão .module.css),\r\n              todas as classes definidas aqui (ex: .animalCard, .cardInterno)\r\n              serão escopadas localmente. Isso significa que o React (ou o sistema de build)\r\n              transformará esses nomes de classes em algo único (ex: AnimalCard_animalCard__XyZ123)\r\n              quando o CSS for aplicado no navegador. Isso PREVINE CONFLITOS DE ESTILO\r\n              entre diferentes componentes da sua aplicação.\r\n\r\n   VARIÁVEIS CSS GLOBAIS (Custom Properties):\r\n   Lembre-se que definimos variáveis CSS globais (como --color-card-bg, --color-primary,\r\n   --border-radius) no arquivo 'src/index.css', dentro do seletor ':root'.\r\n   Podemos (e devemos!) usar essas variáveis aqui para manter a consistência visual\r\n   da aplicação. Ex: background-color: var(--color-card-bg);\r\n   =================================================================================== */\r\n\r\n/* --- ESTILO BASE DO CARD (.animalCard) --- */\r\n/* Esta classe é aplicada ao elemento <article> que envolve todo o card no AnimalCard.jsx. */\r\n.animalCard {\r\n  background-color: var(\r\n    --color-card-bg\r\n  ); /* Cor de fundo branca (variável global). */\r\n  border: 1px solid var(--color-border-light); /* Borda cinza clara sutil (variável global). */\r\n  border-radius: var(\r\n    --border-radius\r\n  ); /* Cantos arredondados (8px, variável global). */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Sombra suave para dar profundidade e destacar o card.\r\n                                                  Valores: deslocamento-horizontal | deslocamento-vertical | raio-do-blur | cor (preto com 10% de opacidade). */\r\n  cursor: pointer; /* O cursor do mouse se transforma em uma \"mãozinha\",\r\n                                                  indicando visualmente que o card é clicável. */\r\n  display: flex; /* Ativa o layout Flexbox para os filhos diretos do card. */\r\n  flex-direction: column; /* Organiza os filhos diretos (.cardInterno e .cardConteudo)\r\n                                                  em uma coluna (um abaixo do outro). */\r\n  overflow: hidden; /* MUITO IMPORTANTE: Se algum conteúdo filho (como uma imagem\r\n                                                  ou as faces do tazo durante a animação de flip)\r\n                                                  tentar \"escapar\" das bordas do card, 'overflow: hidden'\r\n                                                  irá cortá-lo, mantendo o formato do card intacto,\r\n                                                  especialmente com as bordas arredondadas. */\r\n\r\n  /* TRANSIÇÕES SUAVES PARA EFEITOS DE HOVER E FOCO:\r\n     'transition' permite que mudanças em propriedades CSS ocorram gradualmente,\r\n     criando uma animação suave em vez de uma mudança abrupta.\r\n     - 'transform 0.25s ease-out': Anima a propriedade 'transform' (usada no :hover)\r\n                                   durante 0.25 segundos com uma curva de aceleração 'ease-out'\r\n                                   (começa rápido, desacelera no final).\r\n     - 'box-shadow 0.25s ease-out': Anima a 'box-shadow' com as mesmas configurações. */\r\n  transition: transform 0.25s ease-out, box-shadow 0.25s ease-out;\r\n\r\n  outline: none; /* Remove o contorno (outline) padrão que alguns navegadores aplicam\r\n                    a elementos focáveis. Faremos um estilo de foco customizado\r\n                    usando :focus-visible para melhor acessibilidade. */\r\n\r\n  /* PERSPECTIVE (para o efeito de flip 3D):\r\n     Esta propriedade é aplicada ao ELEMENTO PAI do(s) elemento(s) que terão transformações 3D.\r\n     No nosso caso, o .animalCard é o pai do .cardInterno (que vai girar).\r\n     'perspective' define a \"distância\" do \"observador\" (usuário) ao plano Z=0 (o plano do card).\r\n     - Um valor MENOR (ex: 500px) cria um efeito 3D mais exagerado, com mais distorção de perspectiva.\r\n     - Um valor MAIOR (ex: 2000px) cria um efeito 3D mais sutil.\r\n     1000px é um valor comum e equilibrado. Ajuste conforme o tamanho do card e o efeito desejado. */\r\n  perspective: 1000px;\r\n\r\n  min-height: 330px; /* Uma altura mínima para os cards, para que tenham uma aparência\r\n                        consistente mesmo que o conteúdo de texto seja pequeno. Ajuste conforme necessário. */\r\n}\r\n\r\n/* --- ESTILOS DE INTERAÇÃO PARA O CARD (.animalCard:hover, .animalCard:focus-visible) --- */\r\n/* :hover -> Estilos aplicados quando o cursor do mouse está SOBRE o card. */\r\n/* :focus-visible -> Estilos aplicados quando o card está FOCADO via teclado (tecla Tab).\r\n                     Esta pseudo-classe é ótima para acessibilidade porque não aplica o estilo\r\n                     de foco se o usuário apenas clicar no elemento com o mouse (a menos que\r\n                     o navegador determine que o foco visual é necessário após o clique). */\r\n.animalCard:hover,\r\n.animalCard:focus-visible {\r\n  /* 'transform' permite mover, girar, escalar elementos. */\r\n  transform: translateY(-6px) scale(1.03); /* Move o card 6px para CIMA e aumenta seu tamanho em 3%.\r\n                                             Isso cria um efeito de \"elevação\" sutil. */\r\n  box-shadow: 0 7px 14px rgba(0, 0, 0, 0.16); /* Sombra mais pronunciada e um pouco mais espalhada\r\n                                                 para realçar o card quando está ativo/focado. */\r\n}\r\n\r\n/* Estilo de foco customizado ESPECÍFICO para :focus-visible (navegação por teclado). */\r\n.animalCard:focus-visible {\r\n  /* Usamos múltiplas box-shadows para criar um \"anel de foco\" mais claro e acessível.\r\n     As sombras são aplicadas na ordem em que são definidas. */\r\n  box-shadow: 0 0 0 2px var(--color-bg-light),\r\n    /* 1. Anel interno claro (cor de fundo da página, cria um \"espaço\"). */ 0 0\r\n      0 4px var(--color-secondary-darker),\r\n    /* 2. Anel externo com a cor secundária mais escura (laranja escuro). */ 0\r\n      7px 14px rgba(0, 0, 0, 0.18); /* 3. Mantém a sombra de elevação que já aplicamos no hover. */\r\n}\r\n\r\n/* --- ESTILOS PARA O \"TAZO\" QUE VIRA (EFEITO DE FLIP 3D) --- */\r\n\r\n/* .cardInterno: Este é o <div> DENTRO do .animalCard que realmente vai executar a animação de giro.\r\n   Ele contém as duas \"faces\" do tazo (frente e verso). */\r\n.cardInterno {\r\n  position: relative; /* Necessário para que seus filhos com 'position: absolute' (as faces)\r\n                         sejam posicionados em relação a ele. */\r\n  width: 100%; /* Ocupa toda a largura do .animalCard. */\r\n  height: 200px; /* ALTURA FIXA PARA A ÁREA DO TAZO. Ajuste esta altura\r\n                         conforme o design e a proporção das suas imagens de tazo.\r\n                         No AnimalCard.jsx, as imagens também tentarão preencher esta altura. */\r\n  margin-bottom: 0.75rem; /* (12px) Espaço abaixo da área do tazo, antes do conteúdo de texto. */\r\n\r\n  /* TRANSIÇÃO DA ANIMAÇÃO DE FLIP:\r\n     Define como a mudança na propriedade 'transform' (que causa o giro) deve ser animada. */\r\n  transition: transform 0.65s cubic-bezier(0.42, 0, 0.58, 1); /*\r\n     - 'transform': A propriedade CSS que será animada.\r\n     - '0.65s': A duração da animação (0.65 segundos).\r\n     - 'cubic-bezier(...)': Uma \"timing function\" (função de temporização) que define\r\n                            a curva de aceleração da animação. Esta curva específica\r\n                            cria um efeito de giro mais suave e natural (começa e termina\r\n                            mais devagar, acelera no meio). Existem outras pré-definidas\r\n                            como 'ease', 'linear', 'ease-in', 'ease-out', 'ease-in-out'.\r\n  */\r\n\r\n  /* TRANSFORM-STYLE: preserve-3d\r\n     ESSENCIAL para qualquer transformação 3D.\r\n     Esta propriedade, quando aplicada a um elemento pai (como o .cardInterno),\r\n     indica que seus elementos filhos devem ser posicionados em um espaço 3D\r\n     compartilhado, em vez de serem \"achatados\" no plano do pai.\r\n     Sem 'preserve-3d', o efeito de flip não pareceria tridimensional. */\r\n  transform-style: preserve-3d;\r\n}\r\n\r\n/* .cardInternoVirado: Esta classe é ADICIONADA ao .cardInterno via JavaScript\r\n                     (quando o estado 'estaVirado' no AnimalCard.jsx se torna 'true')\r\n                     para INICIAR a animação de giro. */\r\n.cardInternoVirado {\r\n  /* 'transform: rotateY(180deg);' gira o elemento .cardInterno 180 graus\r\n     ao redor do seu eixo Y (o eixo vertical que passa pelo centro).\r\n     Isso faz com que a face do verso, que estava \"atrás\", venha para a frente. */\r\n  transform: rotateY(180deg);\r\n}\r\n\r\n/* .cardFace: Estilo COMUM aplicado a AMBAS as faces do tazo (frente e verso).\r\n   As faces são <div>s dentro do .cardInterno. */\r\n.cardFace {\r\n  position: absolute; /* FAZ COM QUE AMBAS AS FACES OCUPEM EXATAMENTE O MESMO LUGAR\r\n                         e se sobreponham perfeitamente dentro do .cardInterno.\r\n                         Elas são posicionadas em relação ao .cardInterno (que tem position: relative). */\r\n  width: 100%; /* Cada face ocupa toda a largura do .cardInterno. */\r\n  height: 100%; /* Cada face ocupa toda a altura do .cardInterno. */\r\n\r\n  /* BACKFACE-VISIBILITY: hidden\r\n     PROPRIEDADE CRUCIAL para o efeito de flip.\r\n     Quando um elemento está girado e sua \"face de trás\" está voltada para o usuário,\r\n     'backface-visibility: hidden' faz com que essa face de trás se torne INVISÍVEL.\r\n     Se fosse 'visible' (o padrão), você veria a imagem da face de trás espelhada,\r\n     o que estragaria o efeito de \"virar uma carta\".\r\n     '-webkit-backface-visibility' é um prefixo para compatibilidade com navegadores\r\n     mais antigos baseados no WebKit (como versões mais antigas do Safari). */\r\n  -webkit-backface-visibility: hidden;\r\n  backface-visibility: hidden;\r\n\r\n  /* Usamos Flexbox para centralizar a imagem <img> dentro de cada face. */\r\n  display: flex;\r\n  justify-content: center; /* Centraliza horizontalmente. */\r\n  align-items: center; /* Centraliza verticalmente. */\r\n\r\n  background-color: var(\r\n    --color-bg-light,\r\n    #f0f2f5\r\n  ); /* Cor de fundo de fallback caso a imagem\r\n                                                       da face não carregue ou tenha transparência. */\r\n  border-radius: var(\r\n    --border-radius-small\r\n  ); /* Um leve arredondamento para as faces do tazo.\r\n                                                Se os tazos forem circulares, o .cardInterno\r\n                                                (ou até o .animalCard) deveria ter 'border-radius: 50%'\r\n                                                e 'overflow: hidden', e as faces herdariam ou teriam\r\n                                                'border-radius: inherit;'. */\r\n  overflow: hidden; /* Garante que a imagem dentro da face não escape das bordas\r\n                       arredondadas da própria face. */\r\n}\r\n\r\n/* .cardFrente: Estilos específicos para a face FRONTAL do tazo.\r\n   Na verdade, ela não precisa de nenhuma transformação especial, pois já está\r\n   na posição inicial correta (0 graus de rotação no eixo Y). */\r\n.cardFrente {\r\n  /* z-index: 2; (Opcional: Se houvesse problemas estranhos de sobreposição de camadas,\r\n                   poderíamos tentar usar z-index para forçar a ordem, mas geralmente\r\n                   'backface-visibility: hidden' é suficiente para o efeito de flip.) */\r\n}\r\n\r\n/* .cardVerso: Estilos específicos para a face do VERSO do tazo.\r\n   Esta face precisa ser INICIALMENTE ROTACIONADA 180 graus no eixo Y.\r\n   Por quê? Pense assim:\r\n   - A frente está a 0 graus.\r\n   - O verso também estaria a 0 graus, mas \"atrás\" da frente (se olharmos de um lado).\r\n   - Se apenas girarmos o .cardInterno em 180 graus, a frente ficaria de costas (invisível),\r\n     e o verso (que também estava a 0 graus) apareceria, mas estaria espelhado!\r\n   - Ao pré-rotacionar o .cardVerso em 180 graus, ele começa \"de costas para as costas da frente\".\r\n     Quando o .cardInterno gira 180 graus, a frente vai para -180 graus (fica de costas),\r\n     e o verso, que estava a 180 graus, gira -180 graus (relativo ao seu estado inicial),\r\n     acabando a 0 graus (180 - 180 = 0, ou 180 + 180 = 360 que é 0), virado corretamente para o usuário. */\r\n.cardVerso {\r\n  transform: rotateY(180deg);\r\n  /* z-index: 1; (Opcional) */\r\n}\r\n\r\n/* .cardImagem: Estilo para a tag <img> dentro de cada .cardFace. */\r\n.cardImagem {\r\n  display: block; /* 'display: block' em imagens remove qualquer espaço extra\r\n                     que possa aparecer abaixo delas devido ao seu comportamento 'inline' padrão. */\r\n  width: 100%; /* Faz a imagem tentar preencher 100% da largura da .cardFace. */\r\n  height: 100%; /* Faz a imagem tentar preencher 100% da altura da .cardFace. */\r\n\r\n  /* OBJECT-FIT: Controla como a imagem se ajusta dentro das dimensões da .cardFace.\r\n     - 'contain': Redimensiona a imagem para CABER COMPLETAMENTE dentro do container\r\n                  mantendo sua proporção original. Se a proporção da imagem for\r\n                  diferente da proporção da .cardFace, isso pode deixar espaços vazios\r\n                  (preenchidos pela 'background-color' da .cardFace).\r\n                  Para tazos, 'contain' é geralmente uma boa escolha para garantir\r\n                  que toda a arte do tazo seja visível.\r\n     - 'cover': Redimensiona a imagem para COBRIR COMPLETAMENTE a área do container,\r\n                mantendo sua proporção. Se a proporção da imagem for diferente,\r\n                partes da imagem podem ser CORTADAS para evitar espaços vazios.\r\n     - 'fill': Estica a imagem para preencher o container, IGNORANDO a proporção.\r\n               Isso geralmente DISTORCE a imagem e deve ser evitado.\r\n     - 'scale-down': Comporta-se como 'none' (tamanho original) ou 'contain',\r\n                     o que resultar em uma imagem menor.\r\n     - 'none': A imagem é exibida em seu tamanho original, podendo ser cortada. */\r\n  object-fit: contain;\r\n}\r\n/* --- FIM DOS ESTILOS ESPECÍFICOS PARA O EFEITO DE FLIP --- */\r\n\r\n/* --- ESTILOS PARA O CONTEÚDO DE TEXTO (ABAIXO DO TAZO) --- */\r\n\r\n/* .cardConteudo: O <div> que agrupa o nome do animal e seu status de extinção.\r\n   Esta parte fica abaixo do .cardInterno (o tazo que vira) e está sempre visível. */\r\n.cardConteudo {\r\n  padding: 0 1rem 1rem 1rem; /* Espaçamento interno:\r\n                                - 0 no topo (pois o .cardInterno já tem 'margin-bottom').\r\n                                - 1rem nas laterais (esquerda/direita).\r\n                                - 1rem na base. */\r\n  flex-grow: 1; /* Se o .animalCard (que é flex-direction: column) tiver mais altura\r\n                    do que o necessário para o .cardInterno e este .cardConteudo,\r\n                    'flex-grow: 1' faz com que este .cardConteudo se \"estique\"\r\n                    verticalmente para preencher o espaço restante.\r\n                    Isso é útil para alinhar o .statusExtincao na parte de baixo\r\n                    consistentemente, mesmo que os nomes dos animais tenham alturas diferentes. */\r\n  display: flex; /* Também usamos Flexbox aqui dentro para organizar o bloco de nomes\r\n                     e o status de extinção. */\r\n  flex-direction: column; /* Os filhos do .cardConteudo (bloco de nomes e status)\r\n                             serão empilhados verticalmente. */\r\n  justify-content: space-between; /* Se houver espaço vertical extra dentro do .cardConteudo\r\n                                     (devido ao flex-grow), 'space-between' colocará\r\n                                     o primeiro filho (bloco de nomes) no topo e o último\r\n                                     filho (.statusExtincao) na base. */\r\n  gap: 0.5rem; /* (8px) Adiciona um espaço mínimo entre o bloco de nomes e o status,\r\n                  caso não haja muito espaço para o 'space-between' atuar. */\r\n}\r\n\r\n/* .animalNome: Estilo para o nome comum do animal (tag <h3> no JSX). */\r\n.animalNome {\r\n  font-family: var(--font-primary); /* Fonte Nunito (variável global). */\r\n  font-size: 1.25rem; /* (20px) Tamanho da fonte. */\r\n  font-weight: 700; /* Peso da fonte (bold). */\r\n  color: var(--color-primary); /* Cor primária da aplicação (verde escuro). */\r\n  margin-top: 0.25rem; /* Pequena margem acima do nome. */\r\n  margin-bottom: 0.15rem; /* Pequena margem abaixo, antes do nome científico. */\r\n  line-height: 1.25; /* Altura da linha. Importante se o nome tiver mais de uma linha. */\r\n  /* word-break: break-word; (Opcional: se nomes muito longos sem espaços precisarem quebrar) */\r\n}\r\n\r\n/* .nomeCientifico: Estilo para o nome científico (tag <p> com <em> no JSX). */\r\n.nomeCientifico {\r\n  font-family: var(--font-secondary); /* Fonte Open Sans (variável global). */\r\n  font-size: 0.8rem; /* (aprox. 13px) Tamanho da fonte menor. */\r\n  font-style: italic; /* Estilo itálico, comum para nomes científicos. */\r\n  color: var(--color-text-muted); /* Cor de texto secundária (cinza médio). */\r\n  margin-bottom: 0.5rem; /* Margem abaixo, antes do status de extinção (se o gap não for suficiente). */\r\n  word-break: break-word; /* Permite que nomes científicos longos (especialmente se sem espaços)\r\n                             quebrem a linha para não \"estourar\" a largura do card. */\r\n  line-height: 1.3; /* Altura da linha. */\r\n}\r\n\r\n/* .statusExtincao: Estilo para a \"etiqueta\" (badge) que mostra o status de extinção. */\r\n.statusExtincao {\r\n  padding: 0.25rem 0.6rem; /* Espaçamento interno pequeno para a etiqueta. */\r\n  border-radius: var(--border-radius-small); /* Cantos arredondados (4px). */\r\n  font-weight: bold; /* Texto da etiqueta em negrito. */\r\n  font-size: 0.75rem; /* (12px) Tamanho de fonte pequeno para a etiqueta. */\r\n  text-align: center; /* Centraliza o texto dentro da etiqueta. */\r\n  color: var(\r\n    --color-text-light\r\n  ); /* Cor do texto (escura).\r\n                                     A COR DE FUNDO é definida dinamicamente via JavaScript\r\n                                     no AnimalCard.jsx (usando a prop 'style').\r\n                                     É importante que esta cor de texto tenha bom contraste\r\n                                     com TODAS as possíveis cores de fundo do status. */\r\n  align-self: flex-start; /* Faz com que a etiqueta ocupe apenas a largura do seu conteúdo\r\n                             (não se estica para 100% da largura do .cardConteudo)\r\n                             e se alinha à esquerda (início do eixo transversal do flex container pai). */\r\n  margin-top: auto; /* Se 'justify-content: space-between' no .cardConteudo não for suficiente\r\n                       para empurrar esta etiqueta para baixo (ex: se o nome do animal for muito curto),\r\n                       'margin-top: auto' ajudará a ocupar o espaço vertical restante acima dela. */\r\n}\r\n\r\n/* --- MEDIA QUERIES (AJUSTES PARA TELAS MAIORES) --- */\r\n/* Estes estilos são aplicados apenas quando a largura da tela atinge certos \"breakpoints\". */\r\n\r\n/* Para telas com largura mínima de 640px (considerado 'small' ou 'sm' em frameworks como Tailwind). */\r\n@media (min-width: 640px) {\r\n  .animalNome {\r\n    font-size: 1.4rem; /* (aprox. 22px) Nome do animal um pouco maior em telas maiores. */\r\n  }\r\n  .nomeCientifico {\r\n    font-size: 0.9rem; /* (aprox. 14px) Nome científico um pouco maior. */\r\n  }\r\n  .cardInterno {\r\n    height: 220px; /* A área do tazo pode ser um pouco maior em telas maiores.\r\n                      Lembre-se de que as imagens dos tazos devem ter boa resolução para isso. */\r\n  }\r\n  .animalCard {\r\n    min-height: 360px; /* A altura mínima total do card também pode aumentar. */\r\n  }\r\n}\r\n\r\n/* Para telas com largura mínima de 1024px (considerado 'large' ou 'lg'). */\r\n@media (min-width: 1024px) {\r\n  .cardInterno {\r\n    height: 240px; /* Tazo ainda um pouco maior para telas de desktop. */\r\n  }\r\n  .animalCard {\r\n    min-height: 380px;\r\n  }\r\n}\r\n\r\n/* ===================================================================================\r\n   RECAPITULANDO CONCEITOS CSS IMPORTANTES AQUI:\r\n\r\n   - CSS Modules: Escopo local para classes, evitando conflitos.\r\n   - Variáveis CSS (Custom Properties): Uso de `var(--nome-variavel)` para consistência.\r\n   - Flexbox: Para layout dos conteúdos internos do card.\r\n   - Perspective e 3D Transforms: Para o efeito de flip (`perspective`, `transform-style`,\r\n     `transform: rotateY()`, `backface-visibility`).\r\n   - Transitions: Para animações suaves nas mudanças de estado (hover, flip).\r\n   - Pseudo-classes: `:hover`, `:focus-visible` (para interatividade e acessibilidade).\r\n   - Unidades Relativas: `rem` (para fontes e espaçamentos escaláveis).\r\n   - Media Queries: Para design responsivo, ajustando estilos para diferentes tamanhos de tela.\r\n   - Box Model: Como `padding`, `border`, `margin` e `overflow` afetam o layout.\r\n   - Object-fit: Para controlar como as imagens se ajustam em seus containers.\r\n   =================================================================================== */\r\n","/* Caminho: src/components/AnimalList.module.css */\r\n\r\n/* ===================================================================================\r\n   ARQUIVO: AnimalList.module.css\r\n   DESCRIÇÃO: Estilos CSS para o componente AnimalList.\r\n              O objetivo principal é criar um layout em grade (grid) responsivo\r\n              para exibir os cards de animais de forma organizada e agradável\r\n              em diferentes tamanhos de tela.\r\n              Este é um CSS Module, então a classe '.animalListContainer' será\r\n              localmente escopada.\r\n   =================================================================================== */\r\n\r\n/* --- ESTILO DO CONTAINER PRINCIPAL DA LISTA DE ANIMAIS (.animalListContainer) --- */\r\n/* Esta classe é aplicada à tag <section> no AnimalList.jsx. */\r\n.animalListContainer {\r\n  /* ATIVANDO O LAYOUT CSS GRID:\r\n     'display: grid;' transforma este elemento em um \"grid container\".\r\n     Isso nos dá o poder de organizar seus filhos diretos (os AnimalCards)\r\n     em um sistema de linhas e colunas. */\r\n  display: grid;\r\n\r\n  /* DEFININDO AS COLUNAS DO GRID (grid-template-columns):\r\n     Esta é a propriedade mais importante para definir a estrutura das colunas.\r\n     Vamos analisar cada parte:\r\n     - 'repeat(auto-fill, minmax(minWidth, maxWidthOrFraction))':\r\n       - 'repeat()': Permite repetir um padrão de trilha (coluna ou linha) várias vezes.\r\n       - 'auto-fill': Diz ao navegador para criar o máximo de colunas que couberem\r\n                      na largura disponível do container, baseado no tamanho especificado\r\n                      pelo 'minmax()'. Se as colunas criadas não preencherem toda a largura,\r\n                      'auto-fill' manterá o espaço reservado para colunas potenciais\r\n                      (o que pode deixar espaços vazios no final da linha se os itens\r\n                      não se expandirem para preencher).\r\n                      Uma alternativa é 'auto-fit', que se comporta de forma semelhante, mas\r\n                      se houver espaço extra na linha, ele \"colapsa\" as trilhas vazias\r\n                      e permite que os itens existentes se expandam para preencher o espaço\r\n                      (se eles tiverem um tamanho máximo flexível como '1fr').\r\n       - 'minmax(280px, 1fr)': Define o tamanho de cada coluna.\r\n          - 'minmax(min, max)': Uma função que define um intervalo de tamanho para a trilha.\r\n                                A coluna pode encolher até 'min' e esticar até 'max'.\r\n          - '280px': A LARGURA MÍNIMA que cada coluna (e, por consequência, cada AnimalCard)\r\n                     deve ter. Os cards não ficarão mais estreitos que isso, a menos que\r\n                     a própria tela seja mais estreita que 280px.\r\n          - '1fr': A LARGURA MÁXIMA (ou ideal, neste contexto). 'fr' é uma unidade fracional\r\n                   que representa uma porção do espaço disponível NO CONTAINER DO GRID.\r\n                   '1fr' significa que, após alocar o espaço mínimo para todas as colunas\r\n                   que couberem, qualquer espaço restante será distribuído igualmente\r\n                   entre as colunas que têm '1fr' como seu tamanho máximo/flexível.\r\n                   Isso faz com que as colunas se estiquem para preencher a largura\r\n                   do container de forma responsiva.\r\n\r\n     COMO FUNCIONA NA PRÁTICA:\r\n     O navegador vai tentar encaixar o máximo de colunas de pelo menos 280px de largura.\r\n     Se, por exemplo, o container tiver 1000px de largura:\r\n       - Caberiam 3 colunas de 280px (3 * 280 = 840px).\r\n       - Sobrariam 1000px - 840px = 160px.\r\n       - Esses 160px seriam distribuídos igualmente entre as 3 colunas (cada uma pegaria\r\n         aproximadamente 53.33px a mais), graças ao '1fr'.\r\n     Se a tela diminuir, menos colunas de 280px caberão, e o layout se ajustará.\r\n  */\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n\r\n  /* ESPAÇAMENTO ENTRE OS CARDS (gap):\r\n     'gap' é uma propriedade abreviada para 'row-gap' (espaço entre linhas) e\r\n     'column-gap' (espaço entre colunas). */\r\n  gap: 1.8rem; /* Define um espaço de 1.8rem (aprox. 29px se 1rem=16px)\r\n                  tanto verticalmente (entre as linhas de cards)\r\n                  quanto horizontalmente (entre os cards na mesma linha). */\r\n\r\n  /* Opcional: Adicionar padding ao container da lista para que os cards\r\n     não fiquem colados nas bordas do elemento <main> ou da tela.\r\n     Se o elemento <main> no App.js já tiver padding, isso pode ser redundante. */\r\n  padding: 0.5rem 0; /* Exemplo: pequeno padding vertical, sem padding horizontal\r\n                        (se o <main> já tiver padding horizontal). */\r\n}\r\n\r\n/* --- MEDIA QUERIES (AJUSTES RESPONSIVOS ADICIONAIS) --- */\r\n/*\r\n  Embora a configuração de 'grid-template-columns' com 'auto-fill' e 'minmax'\r\n  já torne o grid bastante responsivo, podemos usar Media Queries para refinar\r\n  ainda mais o comportamento em tamanhos de tela específicos.\r\n  Media Queries aplicam estilos apenas quando certas condições (como a largura da tela) são atendidas.\r\n*/\r\n\r\n/* Para telas MUITO pequenas (ex: smartphones em modo retrato, com largura máxima de 480px). */\r\n@media (max-width: 480px) {\r\n  .animalListContainer {\r\n    /* Em telas muito estreitas, podemos forçar uma única coluna para melhor legibilidade\r\n       e para evitar que os cards fiquem muito espremidos, mesmo que o minmax tente evitar. */\r\n    grid-template-columns: 1fr; /* Faz com que cada card ocupe 100% da largura do container. */\r\n    gap: 1.2rem; /* Reduz um pouco o espaçamento entre os cards quando estão em coluna única. */\r\n    /* Poderíamos também reduzir o tamanho mínimo dos cards aqui se eles ainda\r\n       estiverem muito grandes, mas forçar 1fr já é uma grande mudança.\r\n       Ex: grid-template-columns: minmax(0, 1fr); (permite encolher totalmente) */\r\n  }\r\n}\r\n\r\n/* Para telas pequenas a médias (ex: smartphones maiores em modo paisagem, tablets pequenos).\r\n   Este breakpoint (min-width: 640px) é comum (Tailwind 'sm'). */\r\n@media (min-width: 640px) {\r\n  .animalListContainer {\r\n    /* Podemos aumentar um pouco o tamanho mínimo dos cards ou o espaçamento.\r\n       Se a configuração padrão já estiver boa, esta media query pode não ser necessária. */\r\n    grid-template-columns: repeat(\r\n      auto-fill,\r\n      minmax(290px, 1fr)\r\n    ); /* Leve aumento no tamanho mínimo. */\r\n    gap: 2rem; /* Aumenta um pouco o espaçamento. */\r\n  }\r\n}\r\n\r\n/* Para telas médias a grandes (ex: tablets em modo paisagem, desktops pequenos).\r\n   Este breakpoint (min-width: 1024px) é comum (Tailwind 'lg'). */\r\n@media (min-width: 1024px) {\r\n  .animalListContainer {\r\n    /* Em telas maiores, podemos permitir que os cards tenham um tamanho mínimo maior\r\n       ou até mesmo fixar um número de colunas se o design pedir. */\r\n    grid-template-columns: repeat(\r\n      auto-fill,\r\n      minmax(300px, 1fr)\r\n    ); /* Mínimo um pouco maior. */\r\n    gap: 2.2rem; /* Espaçamento ainda maior. */\r\n\r\n    /* Exemplo alternativo: Se você quisesse no máximo 4 colunas em telas grandes:\r\n       grid-template-columns: repeat(auto-fill, minmax(300px, min(320px, 1fr)) );\r\n       Ou se quisesse exatamente 4 colunas (menos flexível, mas possível):\r\n       grid-template-columns: repeat(4, 1fr);\r\n    */\r\n  }\r\n}\r\n\r\n/* Para telas muito grandes (ex: desktops grandes, TVs).\r\n   Este breakpoint (min-width: 1280px) é comum (Tailwind 'xl'). */\r\n@media (min-width: 1280px) {\r\n  .animalListContainer {\r\n    grid-template-columns: repeat(auto-fill, minmax(310px, 1fr));\r\n    /* Podemos adicionar um max-width ao próprio .animalListContainer aqui se não quisermos\r\n       que ele se estique indefinidamente, mesmo que o <main> no App.js já tenha um max-width.\r\n       Por exemplo: max-width: 1400px; margin-left: auto; margin-right: auto; */\r\n  }\r\n}\r\n\r\n/* ===================================================================================\r\n   NOTAS ADICIONAIS PARA OS ALUNOS SOBRE CSS GRID:\r\n\r\n   - Grid vs. Flexbox:\r\n     - Flexbox é ideal para layouts unidimensionais (em uma linha OU em uma coluna).\r\n     - Grid é ideal para layouts bidimensionais (linhas E colunas ao mesmo tempo).\r\n     Para uma galeria de cards, Grid geralmente oferece um controle mais robusto e direto.\r\n\r\n   - Propriedades do Grid Container (o pai, como .animalListContainer):\r\n     - 'display: grid'\r\n     - 'grid-template-columns', 'grid-template-rows'\r\n     - 'gap' (ou 'grid-gap', 'row-gap', 'column-gap')\r\n     - 'justify-items', 'align-items' (para alinhar itens DENTRO de suas células de grid)\r\n     - 'justify-content', 'align-content' (para alinhar o grid INTEIRO DENTRO do container,\r\n                                          se o grid for menor que o container)\r\n\r\n   - Propriedades dos Itens do Grid (os filhos, como os <AnimalCard />):\r\n     - 'grid-column-start', 'grid-column-end', 'grid-column' (para fazer um item ocupar múltiplas colunas)\r\n     - 'grid-row-start', 'grid-row-end', 'grid-row' (para ocupar múltiplas linhas)\r\n     - 'justify-self', 'align-self' (para alinhar um item específico DENTRO de sua célula)\r\n\r\n   - Ferramentas do Desenvolvedor do Navegador:\r\n     Inspecionar o elemento com 'display: grid' nas ferramentas do desenvolvedor\r\n     (F12 no Chrome/Edge/Firefox) geralmente mostra uma sobreposição visual do grid,\r\n     o que é EXTREMAMENTE útil para entender e depurar layouts de grid.\r\n   =================================================================================== */\r\n","/* required styles */\r\n\r\n.leaflet-pane,\r\n.leaflet-tile,\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow,\r\n.leaflet-tile-container,\r\n.leaflet-pane > svg,\r\n.leaflet-pane > canvas,\r\n.leaflet-zoom-box,\r\n.leaflet-image-layer,\r\n.leaflet-layer {\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\t}\r\n.leaflet-container {\r\n\toverflow: hidden;\r\n\t}\r\n.leaflet-tile,\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow {\r\n\t-webkit-user-select: none;\r\n\t   -moz-user-select: none;\r\n\t        user-select: none;\r\n\t  -webkit-user-drag: none;\r\n\t}\r\n/* Prevents IE11 from highlighting tiles in blue */\r\n.leaflet-tile::selection {\r\n\tbackground: transparent;\r\n}\r\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\r\n.leaflet-safari .leaflet-tile {\r\n\timage-rendering: -webkit-optimize-contrast;\r\n\t}\r\n/* hack that prevents hw layers \"stretching\" when loading new tiles */\r\n.leaflet-safari .leaflet-tile-container {\r\n\twidth: 1600px;\r\n\theight: 1600px;\r\n\t-webkit-transform-origin: 0 0;\r\n\t}\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow {\r\n\tdisplay: block;\r\n\t}\r\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\r\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\r\n.leaflet-container .leaflet-overlay-pane svg {\r\n\tmax-width: none !important;\r\n\tmax-height: none !important;\r\n\t}\r\n.leaflet-container .leaflet-marker-pane img,\r\n.leaflet-container .leaflet-shadow-pane img,\r\n.leaflet-container .leaflet-tile-pane img,\r\n.leaflet-container img.leaflet-image-layer,\r\n.leaflet-container .leaflet-tile {\r\n\tmax-width: none !important;\r\n\tmax-height: none !important;\r\n\twidth: auto;\r\n\tpadding: 0;\r\n\t}\r\n\r\n.leaflet-container img.leaflet-tile {\r\n\t/* See: https://bugs.chromium.org/p/chromium/issues/detail?id=600120 */\r\n\tmix-blend-mode: plus-lighter;\r\n}\r\n\r\n.leaflet-container.leaflet-touch-zoom {\r\n\t-ms-touch-action: pan-x pan-y;\r\n\ttouch-action: pan-x pan-y;\r\n\t}\r\n.leaflet-container.leaflet-touch-drag {\r\n\t-ms-touch-action: pinch-zoom;\r\n\t/* Fallback for FF which doesn't support pinch-zoom */\r\n\ttouch-action: none;\r\n\ttouch-action: pinch-zoom;\r\n}\r\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\r\n\t-ms-touch-action: none;\r\n\ttouch-action: none;\r\n}\r\n.leaflet-container {\r\n\t-webkit-tap-highlight-color: transparent;\r\n}\r\n.leaflet-container a {\r\n\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\r\n}\r\n.leaflet-tile {\r\n\tfilter: inherit;\r\n\tvisibility: hidden;\r\n\t}\r\n.leaflet-tile-loaded {\r\n\tvisibility: inherit;\r\n\t}\r\n.leaflet-zoom-box {\r\n\twidth: 0;\r\n\theight: 0;\r\n\t-moz-box-sizing: border-box;\r\n\t     box-sizing: border-box;\r\n\tz-index: 800;\r\n\t}\r\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\r\n.leaflet-overlay-pane svg {\r\n\t-moz-user-select: none;\r\n\t}\r\n\r\n.leaflet-pane         { z-index: 400; }\r\n\r\n.leaflet-tile-pane    { z-index: 200; }\r\n.leaflet-overlay-pane { z-index: 400; }\r\n.leaflet-shadow-pane  { z-index: 500; }\r\n.leaflet-marker-pane  { z-index: 600; }\r\n.leaflet-tooltip-pane   { z-index: 650; }\r\n.leaflet-popup-pane   { z-index: 700; }\r\n\r\n.leaflet-map-pane canvas { z-index: 100; }\r\n.leaflet-map-pane svg    { z-index: 200; }\r\n\r\n.leaflet-vml-shape {\r\n\twidth: 1px;\r\n\theight: 1px;\r\n\t}\r\n.lvml {\r\n\tbehavior: url(#default#VML);\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\t}\r\n\r\n\r\n/* control positioning */\r\n\r\n.leaflet-control {\r\n\tposition: relative;\r\n\tz-index: 800;\r\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\r\n\tpointer-events: auto;\r\n\t}\r\n.leaflet-top,\r\n.leaflet-bottom {\r\n\tposition: absolute;\r\n\tz-index: 1000;\r\n\tpointer-events: none;\r\n\t}\r\n.leaflet-top {\r\n\ttop: 0;\r\n\t}\r\n.leaflet-right {\r\n\tright: 0;\r\n\t}\r\n.leaflet-bottom {\r\n\tbottom: 0;\r\n\t}\r\n.leaflet-left {\r\n\tleft: 0;\r\n\t}\r\n.leaflet-control {\r\n\tfloat: left;\r\n\tclear: both;\r\n\t}\r\n.leaflet-right .leaflet-control {\r\n\tfloat: right;\r\n\t}\r\n.leaflet-top .leaflet-control {\r\n\tmargin-top: 10px;\r\n\t}\r\n.leaflet-bottom .leaflet-control {\r\n\tmargin-bottom: 10px;\r\n\t}\r\n.leaflet-left .leaflet-control {\r\n\tmargin-left: 10px;\r\n\t}\r\n.leaflet-right .leaflet-control {\r\n\tmargin-right: 10px;\r\n\t}\r\n\r\n\r\n/* zoom and fade animations */\r\n\r\n.leaflet-fade-anim .leaflet-popup {\r\n\topacity: 0;\r\n\t-webkit-transition: opacity 0.2s linear;\r\n\t   -moz-transition: opacity 0.2s linear;\r\n\t        transition: opacity 0.2s linear;\r\n\t}\r\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\r\n\topacity: 1;\r\n\t}\r\n.leaflet-zoom-animated {\r\n\t-webkit-transform-origin: 0 0;\r\n\t    -ms-transform-origin: 0 0;\r\n\t        transform-origin: 0 0;\r\n\t}\r\nsvg.leaflet-zoom-animated {\r\n\twill-change: transform;\r\n}\r\n\r\n.leaflet-zoom-anim .leaflet-zoom-animated {\r\n\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t}\r\n.leaflet-zoom-anim .leaflet-tile,\r\n.leaflet-pan-anim .leaflet-tile {\r\n\t-webkit-transition: none;\r\n\t   -moz-transition: none;\r\n\t        transition: none;\r\n\t}\r\n\r\n.leaflet-zoom-anim .leaflet-zoom-hide {\r\n\tvisibility: hidden;\r\n\t}\r\n\r\n\r\n/* cursors */\r\n\r\n.leaflet-interactive {\r\n\tcursor: pointer;\r\n\t}\r\n.leaflet-grab {\r\n\tcursor: -webkit-grab;\r\n\tcursor:    -moz-grab;\r\n\tcursor:         grab;\r\n\t}\r\n.leaflet-crosshair,\r\n.leaflet-crosshair .leaflet-interactive {\r\n\tcursor: crosshair;\r\n\t}\r\n.leaflet-popup-pane,\r\n.leaflet-control {\r\n\tcursor: auto;\r\n\t}\r\n.leaflet-dragging .leaflet-grab,\r\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\r\n.leaflet-dragging .leaflet-marker-draggable {\r\n\tcursor: move;\r\n\tcursor: -webkit-grabbing;\r\n\tcursor:    -moz-grabbing;\r\n\tcursor:         grabbing;\r\n\t}\r\n\r\n/* marker & overlays interactivity */\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow,\r\n.leaflet-image-layer,\r\n.leaflet-pane > svg path,\r\n.leaflet-tile-container {\r\n\tpointer-events: none;\r\n\t}\r\n\r\n.leaflet-marker-icon.leaflet-interactive,\r\n.leaflet-image-layer.leaflet-interactive,\r\n.leaflet-pane > svg path.leaflet-interactive,\r\nsvg.leaflet-image-layer.leaflet-interactive path {\r\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\r\n\tpointer-events: auto;\r\n\t}\r\n\r\n/* visual tweaks */\r\n\r\n.leaflet-container {\r\n\tbackground: #ddd;\r\n\toutline-offset: 1px;\r\n\t}\r\n.leaflet-container a {\r\n\tcolor: #0078A8;\r\n\t}\r\n.leaflet-zoom-box {\r\n\tborder: 2px dotted #38f;\r\n\tbackground: rgba(255,255,255,0.5);\r\n\t}\r\n\r\n\r\n/* general typography */\r\n.leaflet-container {\r\n\tfont-family: \"Helvetica Neue\", Arial, Helvetica, sans-serif;\r\n\tfont-size: 12px;\r\n\tfont-size: 0.75rem;\r\n\tline-height: 1.5;\r\n\t}\r\n\r\n\r\n/* general toolbar styles */\r\n\r\n.leaflet-bar {\r\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\r\n\tborder-radius: 4px;\r\n\t}\r\n.leaflet-bar a {\r\n\tbackground-color: #fff;\r\n\tborder-bottom: 1px solid #ccc;\r\n\twidth: 26px;\r\n\theight: 26px;\r\n\tline-height: 26px;\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\tcolor: black;\r\n\t}\r\n.leaflet-bar a,\r\n.leaflet-control-layers-toggle {\r\n\tbackground-position: 50% 50%;\r\n\tbackground-repeat: no-repeat;\r\n\tdisplay: block;\r\n\t}\r\n.leaflet-bar a:hover,\r\n.leaflet-bar a:focus {\r\n\tbackground-color: #f4f4f4;\r\n\t}\r\n.leaflet-bar a:first-child {\r\n\tborder-top-left-radius: 4px;\r\n\tborder-top-right-radius: 4px;\r\n\t}\r\n.leaflet-bar a:last-child {\r\n\tborder-bottom-left-radius: 4px;\r\n\tborder-bottom-right-radius: 4px;\r\n\tborder-bottom: none;\r\n\t}\r\n.leaflet-bar a.leaflet-disabled {\r\n\tcursor: default;\r\n\tbackground-color: #f4f4f4;\r\n\tcolor: #bbb;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-bar a {\r\n\twidth: 30px;\r\n\theight: 30px;\r\n\tline-height: 30px;\r\n\t}\r\n.leaflet-touch .leaflet-bar a:first-child {\r\n\tborder-top-left-radius: 2px;\r\n\tborder-top-right-radius: 2px;\r\n\t}\r\n.leaflet-touch .leaflet-bar a:last-child {\r\n\tborder-bottom-left-radius: 2px;\r\n\tborder-bottom-right-radius: 2px;\r\n\t}\r\n\r\n/* zoom control */\r\n\r\n.leaflet-control-zoom-in,\r\n.leaflet-control-zoom-out {\r\n\tfont: bold 18px 'Lucida Console', Monaco, monospace;\r\n\ttext-indent: 1px;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\r\n\tfont-size: 22px;\r\n\t}\r\n\r\n\r\n/* layers control */\r\n\r\n.leaflet-control-layers {\r\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\r\n\tbackground: #fff;\r\n\tborder-radius: 5px;\r\n\t}\r\n.leaflet-control-layers-toggle {\r\n\tbackground-image: url(images/layers.png);\r\n\twidth: 36px;\r\n\theight: 36px;\r\n\t}\r\n.leaflet-retina .leaflet-control-layers-toggle {\r\n\tbackground-image: url(images/layers-2x.png);\r\n\tbackground-size: 26px 26px;\r\n\t}\r\n.leaflet-touch .leaflet-control-layers-toggle {\r\n\twidth: 44px;\r\n\theight: 44px;\r\n\t}\r\n.leaflet-control-layers .leaflet-control-layers-list,\r\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\r\n\tdisplay: none;\r\n\t}\r\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\t}\r\n.leaflet-control-layers-expanded {\r\n\tpadding: 6px 10px 6px 6px;\r\n\tcolor: #333;\r\n\tbackground: #fff;\r\n\t}\r\n.leaflet-control-layers-scrollbar {\r\n\toverflow-y: scroll;\r\n\toverflow-x: hidden;\r\n\tpadding-right: 5px;\r\n\t}\r\n.leaflet-control-layers-selector {\r\n\tmargin-top: 2px;\r\n\tposition: relative;\r\n\ttop: 1px;\r\n\t}\r\n.leaflet-control-layers label {\r\n\tdisplay: block;\r\n\tfont-size: 13px;\r\n\tfont-size: 1.08333em;\r\n\t}\r\n.leaflet-control-layers-separator {\r\n\theight: 0;\r\n\tborder-top: 1px solid #ddd;\r\n\tmargin: 5px -10px 5px -6px;\r\n\t}\r\n\r\n/* Default icon URLs */\r\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\r\n\tbackground-image: url(images/marker-icon.png);\r\n\t}\r\n\r\n\r\n/* attribution and scale controls */\r\n\r\n.leaflet-container .leaflet-control-attribution {\r\n\tbackground: #fff;\r\n\tbackground: rgba(255, 255, 255, 0.8);\r\n\tmargin: 0;\r\n\t}\r\n.leaflet-control-attribution,\r\n.leaflet-control-scale-line {\r\n\tpadding: 0 5px;\r\n\tcolor: #333;\r\n\tline-height: 1.4;\r\n\t}\r\n.leaflet-control-attribution a {\r\n\ttext-decoration: none;\r\n\t}\r\n.leaflet-control-attribution a:hover,\r\n.leaflet-control-attribution a:focus {\r\n\ttext-decoration: underline;\r\n\t}\r\n.leaflet-attribution-flag {\r\n\tdisplay: inline !important;\r\n\tvertical-align: baseline !important;\r\n\twidth: 1em;\r\n\theight: 0.6669em;\r\n\t}\r\n.leaflet-left .leaflet-control-scale {\r\n\tmargin-left: 5px;\r\n\t}\r\n.leaflet-bottom .leaflet-control-scale {\r\n\tmargin-bottom: 5px;\r\n\t}\r\n.leaflet-control-scale-line {\r\n\tborder: 2px solid #777;\r\n\tborder-top: none;\r\n\tline-height: 1.1;\r\n\tpadding: 2px 5px 1px;\r\n\twhite-space: nowrap;\r\n\t-moz-box-sizing: border-box;\r\n\t     box-sizing: border-box;\r\n\tbackground: rgba(255, 255, 255, 0.8);\r\n\ttext-shadow: 1px 1px #fff;\r\n\t}\r\n.leaflet-control-scale-line:not(:first-child) {\r\n\tborder-top: 2px solid #777;\r\n\tborder-bottom: none;\r\n\tmargin-top: -2px;\r\n\t}\r\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\r\n\tborder-bottom: 2px solid #777;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-control-attribution,\r\n.leaflet-touch .leaflet-control-layers,\r\n.leaflet-touch .leaflet-bar {\r\n\tbox-shadow: none;\r\n\t}\r\n.leaflet-touch .leaflet-control-layers,\r\n.leaflet-touch .leaflet-bar {\r\n\tborder: 2px solid rgba(0,0,0,0.2);\r\n\tbackground-clip: padding-box;\r\n\t}\r\n\r\n\r\n/* popup */\r\n\r\n.leaflet-popup {\r\n\tposition: absolute;\r\n\ttext-align: center;\r\n\tmargin-bottom: 20px;\r\n\t}\r\n.leaflet-popup-content-wrapper {\r\n\tpadding: 1px;\r\n\ttext-align: left;\r\n\tborder-radius: 12px;\r\n\t}\r\n.leaflet-popup-content {\r\n\tmargin: 13px 24px 13px 20px;\r\n\tline-height: 1.3;\r\n\tfont-size: 13px;\r\n\tfont-size: 1.08333em;\r\n\tmin-height: 1px;\r\n\t}\r\n.leaflet-popup-content p {\r\n\tmargin: 17px 0;\r\n\tmargin: 1.3em 0;\r\n\t}\r\n.leaflet-popup-tip-container {\r\n\twidth: 40px;\r\n\theight: 20px;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\tmargin-top: -1px;\r\n\tmargin-left: -20px;\r\n\toverflow: hidden;\r\n\tpointer-events: none;\r\n\t}\r\n.leaflet-popup-tip {\r\n\twidth: 17px;\r\n\theight: 17px;\r\n\tpadding: 1px;\r\n\r\n\tmargin: -10px auto 0;\r\n\tpointer-events: auto;\r\n\r\n\t-webkit-transform: rotate(45deg);\r\n\t   -moz-transform: rotate(45deg);\r\n\t    -ms-transform: rotate(45deg);\r\n\t        transform: rotate(45deg);\r\n\t}\r\n.leaflet-popup-content-wrapper,\r\n.leaflet-popup-tip {\r\n\tbackground: white;\r\n\tcolor: #333;\r\n\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\r\n\t}\r\n.leaflet-container a.leaflet-popup-close-button {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tborder: none;\r\n\ttext-align: center;\r\n\twidth: 24px;\r\n\theight: 24px;\r\n\tfont: 16px/24px Tahoma, Verdana, sans-serif;\r\n\tcolor: #757575;\r\n\ttext-decoration: none;\r\n\tbackground: transparent;\r\n\t}\r\n.leaflet-container a.leaflet-popup-close-button:hover,\r\n.leaflet-container a.leaflet-popup-close-button:focus {\r\n\tcolor: #585858;\r\n\t}\r\n.leaflet-popup-scrolled {\r\n\toverflow: auto;\r\n\t}\r\n\r\n.leaflet-oldie .leaflet-popup-content-wrapper {\r\n\t-ms-zoom: 1;\r\n\t}\r\n.leaflet-oldie .leaflet-popup-tip {\r\n\twidth: 24px;\r\n\tmargin: 0 auto;\r\n\r\n\t-ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\";\r\n\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\r\n\t}\r\n\r\n.leaflet-oldie .leaflet-control-zoom,\r\n.leaflet-oldie .leaflet-control-layers,\r\n.leaflet-oldie .leaflet-popup-content-wrapper,\r\n.leaflet-oldie .leaflet-popup-tip {\r\n\tborder: 1px solid #999;\r\n\t}\r\n\r\n\r\n/* div icon */\r\n\r\n.leaflet-div-icon {\r\n\tbackground: #fff;\r\n\tborder: 1px solid #666;\r\n\t}\r\n\r\n\r\n/* Tooltip */\r\n/* Base styles for the element that has a tooltip */\r\n.leaflet-tooltip {\r\n\tposition: absolute;\r\n\tpadding: 6px;\r\n\tbackground-color: #fff;\r\n\tborder: 1px solid #fff;\r\n\tborder-radius: 3px;\r\n\tcolor: #222;\r\n\twhite-space: nowrap;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n\tpointer-events: none;\r\n\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\r\n\t}\r\n.leaflet-tooltip.leaflet-interactive {\r\n\tcursor: pointer;\r\n\tpointer-events: auto;\r\n\t}\r\n.leaflet-tooltip-top:before,\r\n.leaflet-tooltip-bottom:before,\r\n.leaflet-tooltip-left:before,\r\n.leaflet-tooltip-right:before {\r\n\tposition: absolute;\r\n\tpointer-events: none;\r\n\tborder: 6px solid transparent;\r\n\tbackground: transparent;\r\n\tcontent: \"\";\r\n\t}\r\n\r\n/* Directions */\r\n\r\n.leaflet-tooltip-bottom {\r\n\tmargin-top: 6px;\r\n}\r\n.leaflet-tooltip-top {\r\n\tmargin-top: -6px;\r\n}\r\n.leaflet-tooltip-bottom:before,\r\n.leaflet-tooltip-top:before {\r\n\tleft: 50%;\r\n\tmargin-left: -6px;\r\n\t}\r\n.leaflet-tooltip-top:before {\r\n\tbottom: 0;\r\n\tmargin-bottom: -12px;\r\n\tborder-top-color: #fff;\r\n\t}\r\n.leaflet-tooltip-bottom:before {\r\n\ttop: 0;\r\n\tmargin-top: -12px;\r\n\tmargin-left: -6px;\r\n\tborder-bottom-color: #fff;\r\n\t}\r\n.leaflet-tooltip-left {\r\n\tmargin-left: -6px;\r\n}\r\n.leaflet-tooltip-right {\r\n\tmargin-left: 6px;\r\n}\r\n.leaflet-tooltip-left:before,\r\n.leaflet-tooltip-right:before {\r\n\ttop: 50%;\r\n\tmargin-top: -6px;\r\n\t}\r\n.leaflet-tooltip-left:before {\r\n\tright: 0;\r\n\tmargin-right: -12px;\r\n\tborder-left-color: #fff;\r\n\t}\r\n.leaflet-tooltip-right:before {\r\n\tleft: 0;\r\n\tmargin-left: -12px;\r\n\tborder-right-color: #fff;\r\n\t}\r\n\r\n/* Printing */\r\n\r\n@media print {\r\n\t/* Prevent printers from removing background-images of controls. */\r\n\t.leaflet-control {\r\n\t\t-webkit-print-color-adjust: exact;\r\n\t\tprint-color-adjust: exact;\r\n\t\t}\r\n\t}\r\n","/* Caminho: src/components/MapComponent.module.css */\r\n\r\n/* ===================================================================================\r\n   ARQUIVO: MapComponent.module.css\r\n   DESCRIÇÃO: Estilos CSS para o componente MapComponent, que exibe o mapa de\r\n              distribuição dos animais e a lista de países nativos.\r\n              Este é um CSS Module, garantindo que as classes sejam escopadas.\r\n   =================================================================================== */\r\n\r\n/* --- CONTAINER DA SEÇÃO INTEIRA DO MAPA (.mapSectionContainer) --- */\r\n/* Este é o <section> que envolve tanto o título da seção, quanto o mapa e a lista de países. */\r\n.mapSectionContainer {\r\n  margin-bottom: 2.5rem; /* Espaço abaixo da seção do mapa, antes da próxima seção de detalhes. */\r\n  padding-bottom: 2rem; /* Espaçamento interno na base da seção. */\r\n  border-bottom: 1px solid var(--color-border-light); /* Linha sutil para separar da próxima seção. */\r\n}\r\n/* Remove a borda e margem inferior se esta for a última seção na página de detalhes. */\r\n.mapSectionContainer:last-child {\r\n  border-bottom: none;\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n}\r\n\r\n/* --- TÍTULO DA SEÇÃO DO MAPA (.sectionTitle) --- */\r\n/* H2: \"Distribuição Geográfica e Países Nativos de [Nome do Animal]\" */\r\n.sectionTitle {\r\n  font-family: var(--font-primary); /* Fonte Nunito. */\r\n  font-size: 1.4rem; /* Tamanho inicial (mobile-first). */\r\n  color: var(--color-primary); /* Verde escuro. */\r\n  margin-top: 0; /* Remove margem superior padrão do h2. */\r\n  margin-bottom: 1rem; /* Espaço abaixo do título, antes da introdução ao mapa. */\r\n  border-bottom: 2px solid var(--color-secondary); /* Linha laranja abaixo do título. */\r\n  padding-bottom: 0.5rem; /* Espaço entre o texto do título e a linha laranja. */\r\n  display: inline-block; /* Faz a borda inferior se ajustar à largura do texto. */\r\n}\r\n.sectionTitle span[role=\"img\"] {\r\n  /* Estilo para o emoji no título. */\r\n  margin-right: 0.6rem;\r\n  font-size: 1.1em; /* Emoji um pouco maior que o texto. */\r\n}\r\n\r\n/* --- TEXTO INTRODUTÓRIO DO MAPA (.mapIntroText) --- */\r\n/* Parágrafo <p> que explica brevemente o mapa. */\r\n.mapIntroText {\r\n  font-size: 0.9rem;\r\n  color: var(--color-text-muted); /* Cinza médio. */\r\n  margin-bottom: 1.5rem; /* Espaço antes do container do mapa. */\r\n  line-height: 1.5;\r\n  max-width: 700px; /* Limita a largura para melhor legibilidade. */\r\n  margin-left: auto; /* Centraliza se o container pai for mais largo. */\r\n  margin-right: auto;\r\n  text-align: center; /* Centraliza o texto introdutório. */\r\n}\r\n\r\n/* --- WRAPPER DO MAPA E DA LISTA DE PAÍSES (.mapContainerWrapper) --- */\r\n/* Este <div> agrupa o mapa em si (.mapDisplay) e a lista de países (.countryListFallback). */\r\n.mapContainerWrapper {\r\n  /* text-align: center; (Já definido no .mapIntroText, pode não ser necessário aqui\r\n                           a menos que queira centralizar o próprio .mapDisplay se ele tiver max-width) */\r\n}\r\n\r\n/* --- CONTAINER DO MAPA LEAFLET (.mapDisplay) --- */\r\n/* O <div> onde o <MapContainer> do React-Leaflet será renderizado. */\r\n.mapDisplay {\r\n  height: 300px; /* Altura inicial do mapa (mobile-first). */\r\n  width: 100%; /* Ocupa toda a largura disponível. */\r\n  max-width: 750px; /* Largura máxima para o mapa, para não ficar excessivamente largo em telas grandes. */\r\n  margin-top: 1rem; /* Espaço acima do mapa. */\r\n  margin-bottom: 1.5rem; /* Espaço abaixo do mapa, antes da lista de países. */\r\n  margin-left: auto; /* Centraliza o mapa se ele tiver max-width e o .mapContainerWrapper for mais largo. */\r\n  margin-right: auto;\r\n  border: 1px solid var(--color-border-light); /* Borda sutil ao redor do mapa. */\r\n  border-radius: var(\r\n    --border-radius-small\r\n  ); /* Cantos levemente arredondados. */\r\n  background-color: #eef2f7; /* Um cinza azulado muito claro para o fundo do mapa antes de carregar os \"azulejos\". */\r\n  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1); /* Sombra sutil no mapa. */\r\n  position: relative; /* Para z-index funcionar corretamente em relação a outros elementos. */\r\n  z-index: 0; /* Garante que os controles do mapa (zoom, etc.) fiquem visíveis e acima do mapa base.\r\n                 O Leaflet gerencia o z-index interno de suas camadas. */\r\n}\r\n/* Placeholder para quando o mapa está carregando (se o MapContainer tiver a prop 'placeholder') */\r\n.mapDisplay .leaflet-map-pane:empty + .leaflet-control-container + p {\r\n  /* Exemplo de seletor para placeholder */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  color: var(--color-text-muted);\r\n  font-style: italic;\r\n}\r\n\r\n/* --- SEÇÃO DA LISTA DE PAÍSES (ABAIXO DO MAPA) (.countryListFallback) --- */\r\n/* \"Fallback\" é um termo um pouco inadequado aqui se a lista é sempre mostrada,\r\n   mas mantém o nome original do seu código. Poderia ser .countryListSection. */\r\n.countryListFallback {\r\n  margin-top: 1.5rem; /* Espaço acima da lista de países. */\r\n  font-size: 0.9rem; /* Tamanho da fonte base para esta seção. */\r\n  text-align: center; /* Centraliza o título e a lista de países. */\r\n  padding: 0 1rem; /* Padding lateral para não colar nas bordas em telas pequenas. */\r\n}\r\n\r\n/* Título \"Países onde o ... é nativo:\" (.countryListTitle) */\r\n.countryListTitle {\r\n  font-size: 1.1em; /* Relativo ao font-size do .countryListFallback (0.9rem * 1.1). */\r\n  color: var(--color-text-light); /* Cor de texto principal. */\r\n  margin-bottom: 0.8rem; /* Espaço abaixo do título, antes da lista <ul>. */\r\n  font-weight: 600; /* Semi-bold. */\r\n  font-family: var(--font-primary);\r\n}\r\n\r\n/* Lista <ul> de países (.countryList) */\r\n.countryList {\r\n  list-style: none; /* Remove os marcadores (bolinhas) padrão da lista. */\r\n  padding-left: 0; /* Remove o preenchimento padrão à esquerda da lista <ul>. */\r\n  display: flex; /* Flexbox para os itens da lista. */\r\n  flex-wrap: wrap; /* Permite que os nomes dos países quebrem para a próxima linha se não couberem. */\r\n  justify-content: center; /* Centraliza os nomes dos países horizontalmente. */\r\n  gap: 8px 12px; /* Espaço entre os itens: 8px vertical, 12px horizontal. */\r\n  max-width: 700px; /* Largura máxima para a lista de países. */\r\n  margin-left: auto; /* Centraliza a lista. */\r\n  margin-right: auto;\r\n}\r\n\r\n/* Cada item <li> da lista de países (.countryListItem) */\r\n.countryListItem {\r\n  background-color: transparent; /* Fundo transparente por padrão. */\r\n  padding: 0.3rem 0.7rem; /* Espaçamento interno no item. */\r\n  border: 1px solid var(--color-border-light); /* Borda cinza clara. */\r\n  border-radius: var(--border-radius-small); /* Cantos arredondados. */\r\n  color: var(--color-text-muted); /* Cor do texto cinza médio. */\r\n  cursor: default; /* Cursor padrão. Poderia ser 'pointer' se houvesse uma ação de clique no país. */\r\n  transition: background-color 0.2s ease-out, color 0.2s ease-out,\r\n    border-color 0.2s ease-out, transform 0.15s ease-out;\r\n  font-size: 0.85em; /* Relativo ao .countryListFallback. */\r\n}\r\n\r\n/* Efeito de hover para itens da lista de países. */\r\n.countryListItem:hover {\r\n  background-color: var(--color-bg-light); /* Fundo cinza bem claro no hover. */\r\n  border-color: var(\r\n    --color-secondary-light,\r\n    #fab179\r\n  ); /* Borda laranja clara. */\r\n  color: var(--color-text-light); /* Texto mais escuro no hover. */\r\n  transform: translateY(-1px); /* Leve elevação. */\r\n}\r\n\r\n/* Estilo para o item da lista de país que está ATUALMENTE DESTACADO\r\n   (quando o mouse está sobre ele E o estado 'paisDestacado' no componente corresponde). */\r\n.countryListItemHighlighted {\r\n  background-color: var(\r\n    --color-secondary\r\n  ); /* Cor de fundo laranja (principal secundária). */\r\n  color: white; /* Texto branco para contraste. */\r\n  border-color: var(--color-secondary-darker); /* Borda laranja escura. */\r\n  font-weight: bold; /* Texto em negrito para destaque. */\r\n  transform: scale(1.05); /* Aumenta um pouco o tamanho. */\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15); /* Sombra sutil. */\r\n}\r\n\r\n/* Classe utilitária para texto \"muted\" (acinzentado), se necessário dentro desta seção. */\r\n.textMuted {\r\n  font-style: italic;\r\n  color: var(--color-text-muted);\r\n  font-size: 0.85rem;\r\n}\r\n\r\n/* --- MEDIA QUERIES (AJUSTES RESPONSIVOS) --- */\r\n\r\n/* Para telas com largura mínima de 640px (Tailwind 'sm', tablets pequenos). */\r\n@media (min-width: 640px) {\r\n  .mapDisplay {\r\n    height: 380px; /* Aumenta a altura do mapa. */\r\n  }\r\n  .sectionTitle {\r\n    font-size: 1.6rem; /* Título da seção maior. */\r\n  }\r\n  .countryListItem {\r\n    font-size: 0.9em; /* Itens da lista um pouco maiores. */\r\n  }\r\n}\r\n\r\n/* Para telas com largura mínima de 768px (Tailwind 'md', tablets maiores). */\r\n@media (min-width: 768px) {\r\n  .mapDisplay {\r\n    height: 420px; /* Altura do mapa ainda maior. */\r\n    max-width: 800px; /* Mapa pode ser um pouco mais largo. */\r\n  }\r\n  .mapIntroText,\r\n  .countryListFallback {\r\n    padding-left: 0; /* Remove padding lateral se o container principal já centraliza. */\r\n    padding-right: 0;\r\n  }\r\n}\r\n\r\n/* Para telas com largura mínima de 1024px (Tailwind 'lg', desktops). */\r\n@media (min-width: 1024px) {\r\n  .mapDisplay {\r\n    height: 450px; /* Altura final para desktops. */\r\n    max-width: 900px; /* Largura máxima final. */\r\n  }\r\n  .sectionTitle {\r\n    font-size: 1.75rem;\r\n  }\r\n  .mapIntroText {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n\r\n/* ===================================================================================\r\n   NOTAS ADICIONAIS PARA OS ALUNOS SOBRE ESTE CSS E O MAPCOMPONENT:\r\n\r\n   - Integração com Bibliotecas Externas (Leaflet):\r\n     Muitas vezes, bibliotecas JavaScript externas (como Leaflet.js) vêm com seu\r\n     próprio CSS necessário para funcionar. É crucial importar esse CSS\r\n     (como 'leaflet/dist/leaflet.css') na sua aplicação.\r\n\r\n   - CSS Scoping (CSS Modules):\r\n     Lembre-se que '.mapDisplay' aqui se tornará algo como '.MapComponent_mapDisplay__XYZ123'\r\n     no HTML final, evitando conflitos com uma classe '.mapDisplay' que possa existir\r\n     em outro componente.\r\n\r\n   - Responsividade do Mapa:\r\n     A altura do mapa é frequentemente ajustada com Media Queries para diferentes\r\n     tamanhos de tela, pois uma altura fixa pode não ser ideal para todos os dispositivos.\r\n     A largura geralmente é '100%' (do seu container) até um 'max-width'.\r\n\r\n   - Interatividade CSS (:hover, .countryListItemHighlighted):\r\n     CSS pode ser usado para fornecer feedback visual imediato a interações do usuário\r\n     (como passar o mouse sobre um item da lista). O destaque mais forte\r\n     (.countryListItemHighlighted) é controlado pelo estado do React, que adiciona/remove\r\n     essa classe dinamicamente.\r\n\r\n   - Acessibilidade do Mapa:\r\n     Mapas interativos podem ser um desafio para acessibilidade. É importante:\r\n       - Fornecer alternativas textuais para a informação visual do mapa (como a lista de países).\r\n       - Garantir que os controles do mapa sejam acessíveis via teclado (o Leaflet geralmente cuida disso).\r\n       - Usar 'aria-labels' e 'title' apropriados para elementos interativos.\r\n   =================================================================================== */\r\n","/* Caminho: src/components/AnimalDetail.module.css */\r\n\r\n/* ===================================================================================\r\n   ARQUIVO: AnimalDetail.module.css\r\n   DESCRIÇÃO: Estilos CSS para o componente AnimalDetail.\r\n              Este arquivo utiliza CSS Modules, o que significa que todas as classes\r\n              definidas aqui (ex: .detailContainer) são escopadas localmente\r\n              para o AnimalDetail.jsx. Isso evita conflitos de nomenclatura com\r\n              outros arquivos CSS na aplicação.\r\n   =================================================================================== */\r\n\r\n/* --- CONTAINER PRINCIPAL DA PÁGINA DE DETALHES (.detailContainer) --- */\r\n/* Aplica-se à tag <article> que envolve todo o conteúdo da página de detalhes. */\r\n.detailContainer {\r\n  background-color: var(--color-card-bg); /* Fundo branco, usando uma variável CSS global. */\r\n  padding: 1rem; /* Espaçamento interno inicial (para telas pequenas - mobile-first).\r\n                    1rem em todos os lados (topo, direita, base, esquerda). */\r\n  border-radius: var(--border-radius); /* Cantos arredondados (8px, variável global). */\r\n  box-shadow: 0 4px 12px var(--color-shadow); /* Sombra para dar um efeito de profundidade.\r\n                                                 (deslocamento-x deslocamento-y raio-do-blur cor-da-sombra) */\r\n  margin-top: 1rem; /* Espaço acima do container, separando-o de elementos anteriores. */\r\n  /* Opcional: Se o App.js não controlar a largura máxima, podemos definir aqui: */\r\n  /* max-width: 960px; */\r\n  /* margin-left: auto; */ /* Para centralizar se max-width for usado aqui. */\r\n  /* margin-right: auto; */\r\n}\r\n\r\n/* --- BOTÃO \"VOLTAR À LISTA\" (.backButton) --- */\r\n.backButton {\r\n  background-color: var(--color-secondary); /* Cor de fundo laranja (variável global). */\r\n  color: white; /* Cor do texto branca para contraste. */\r\n  border: none; /* Remove a borda padrão do navegador para botões. */\r\n  padding: 0.7rem 1.3rem; /* Espaçamento interno para dar tamanho ao botão. */\r\n  border-radius: var(--border-radius); /* Cantos arredondados. */\r\n  font-family: var(--font-primary); /* Fonte principal (Nunito). */\r\n  font-size: 0.9rem; /* Tamanho da fonte. */\r\n  font-weight: bold; /* Texto em negrito. */\r\n  cursor: pointer; /* O cursor do mouse vira uma \"mãozinha\", indicando clicabilidade. */\r\n  /* Transições suaves para efeitos de hover/focus: */\r\n  transition: background-color 0.2s ease-out, transform 0.15s ease-out, box-shadow 0.2s ease-out;\r\n  margin-bottom: 2rem; /* Um bom espaço abaixo do botão, antes do conteúdo principal. */\r\n  display: inline-flex; /* Permite alinhar o emoji (que se comporta como texto) com o texto do botão. */\r\n  align-items: center; /* Centraliza verticalmente o emoji e o texto. */\r\n  gap: 0.5rem; /* Espaço entre o emoji da seta e o texto \"Voltar à Lista\". */\r\n}\r\n/* Efeito ao passar o mouse (:hover) ou quando o botão está focado via teclado (:focus-visible). */\r\n.backButton:hover,\r\n.backButton:focus-visible {\r\n  background-color: var(--color-secondary-darker); /* Laranja mais escuro (definir esta variável em :root). */\r\n  transform: translateY(-2px); /* Leve \"salto\" para cima. */\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* Sombra sutil para o efeito de elevação. */\r\n}\r\n/* Estilo de foco específico para acessibilidade (navegação por teclado). */\r\n.backButton:focus-visible {\r\n  outline: 3px solid var(--color-primary-darker); /* Contorno verde escuro bem visível. */\r\n  outline-offset: 2px; /* Pequeno espaço entre o botão e o contorno. */\r\n}\r\n\r\n\r\n/* --- CABEÇALHO DA PÁGINA DE DETALHES (.detailHeader) --- */\r\n/* Este <header> interno contém o tazo, nome, status de extinção. */\r\n.detailHeader {\r\n  text-align: center; /* Centraliza todo o conteúdo do cabeçalho. */\r\n  margin-bottom: 2.5rem; /* Espaço maior abaixo do cabeçalho, antes das seções de detalhes. */\r\n  padding-bottom: 2rem; /* Espaçamento interno na base do cabeçalho. */\r\n  /* A borda inferior é estilizada dinamicamente via JavaScript (inline style)\r\n     usando a cor do nível de extinção do animal. Ex:\r\n     border-bottom: 5px solid var(--color-lc); */\r\n}\r\n\r\n/* --- ESTILOS PARA O TAZO QUE VIRA NO CABEÇALHO --- */\r\n/* .headerTazoContainer: O container externo do tazo, controla perspectiva e interações. */\r\n.headerTazoContainer {\r\n  width: 100%; /* Ocupa a largura disponível, mas limitado pelo max-width. */\r\n  max-width: 220px; /* Largura máxima do tazo. Ajuste conforme o design. */\r\n  height: 220px;    /* Altura do tazo. Para tazos circulares, altura = largura. */\r\n  margin-left: auto; /* Centraliza o tazo horizontalmente. */\r\n  margin-right: auto;\r\n  margin-bottom: 1.8rem; /* Espaço abaixo do tazo, antes do nome do animal. */\r\n  perspective: 900px;  /* Profundidade da \"cena\" 3D para o efeito de giro. */\r\n  cursor: pointer;       /* Indica que o tazo é clicável (para abrir no lightbox). */\r\n  display: block;        /* Necessário para que 'margin: auto' funcione corretamente. */\r\n  border-radius: 50%;    /* FAZ O TAZO SER CIRCULAR.\r\n                            Se seus tazos forem quadrados com cantos arredondados,\r\n                            use 'var(--border-radius)' ou um valor específico em 'px'. */\r\n  outline: none;         /* Remove o contorno padrão do navegador ao focar. */\r\n  -webkit-tap-highlight-color: transparent; /* Remove o destaque azul/cinza ao tocar em dispositivos móveis. */\r\n  border: 3px solid transparent; /* Borda inicial transparente, para o efeito de foco. */\r\n  transition: border-color 0.2s ease-out, transform 0.2s ease-out; /* Transições suaves. */\r\n}\r\n/* Efeito de hover sutil no container do tazo. */\r\n.headerTazoContainer:hover {\r\n  /* border-color: var(--color-secondary-light, #fde6d4); (Um laranja bem claro) */\r\n  transform: scale(1.02); /* Leve aumento de tamanho. */\r\n}\r\n/* Estilo de foco visível para o tazo (navegação por teclado). */\r\n.headerTazoContainer:focus-visible {\r\n  border-color: var(--color-secondary); /* Borda laranja para indicar foco. */\r\n  /* Adiciona um \"anel\" externo para maior destaque do foco. */\r\n  box-shadow: 0 0 0 3px var(--color-bg-light), /* Anel interno da cor de fundo da página. */\r\n              0 0 0 5px var(--color-secondary); /* Anel externo laranja. */\r\n}\r\n\r\n/* .headerTazoInner: O elemento interno que realmente executa a rotação 3D. */\r\n.headerTazoInner {\r\n  position: relative; /* Para que as faces (.headerTazoFace) se posicionem dentro dele. */\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: transform 0.7s cubic-bezier(0.45, 0.05, 0.55, 0.95); /* Animação de giro mais elaborada. */\r\n  transform-style: preserve-3d; /* ESSENCIAL: Permite que os filhos sejam tratados em 3D. */\r\n  border-radius: inherit; /* Herda o 'border-radius' do .headerTazoContainer (ex: 50% para círculo). */\r\n  box-shadow: 0 4px 10px rgba(0,0,0,0.15); /* Sombra sutil no próprio tazo. */\r\n}\r\n\r\n/* .headerTazoInnerFlipped: Classe aplicada ao .headerTazoInner quando deve estar virado. */\r\n.headerTazoInnerFlipped {\r\n  transform: rotateY(180deg); /* Gira o elemento 180 graus no eixo Y. */\r\n}\r\n\r\n/* .headerTazoFace: Estilo comum para a frente e o verso do tazo. */\r\n.headerTazoFace {\r\n  position: absolute; /* Sobrepõe as duas faces no mesmo lugar. */\r\n  width: 100%;\r\n  height: 100%;\r\n  backface-visibility: hidden; /* CRUCIAL: Esconde a face que está \"de costas\" para o usuário. */\r\n  -webkit-backface-visibility: hidden; /* Prefixo para compatibilidade com Safari. */\r\n  display: flex; /* Para centralizar a imagem dentro da face. */\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: inherit; /* Herda o border-radius (ex: 50%). */\r\n  overflow: hidden; /* Garante que a imagem não saia das bordas arredondadas da face. */\r\n  background-color: var(--color-bg-light, #f0f2f5); /* Cor de fundo de fallback. */\r\n}\r\n/* Imagem dentro da face do tazo. */\r\n.headerTazoFace img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover; /* 'cover' para preencher o círculo/quadrado do tazo, pode cortar se a proporção\r\n                        da imagem for diferente. 'contain' mostraria a imagem inteira, podendo\r\n                        deixar espaços. Para tazos, 'cover' costuma ficar melhor se as imagens\r\n                        forem preparadas para isso. */\r\n}\r\n\r\n/* .headerTazoFront: A face da frente. Já está na posição correta. */\r\n.headerTazoFront { /* Nenhum estilo de transformação específico necessário aqui. */ }\r\n\r\n/* .headerTazoBack: A face do verso. Precisa ser pré-rotacionada. */\r\n.headerTazoBack {\r\n  transform: rotateY(180deg); /* Inicia virada de costas. */\r\n}\r\n\r\n/* .imagePlaceholder: Usado quando uma imagem (tazo ou galeria) não pode ser carregada. */\r\n.imagePlaceholder {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--color-text-muted); /* Cinza médio para o texto. */\r\n  font-size: 0.9rem;\r\n  background-color: #e9ecef; /* Fundo cinza claro. */\r\n  border-radius: inherit; /* Herda o border-radius do seu container pai. */\r\n  padding: 15px; /* Espaçamento interno para o texto não colar nas bordas. */\r\n  box-sizing: border-box; /* Padding não aumenta o tamanho total. */\r\n  text-align: center; /* Centraliza o texto. */\r\n  border: 1px dashed var(--color-border-light); /* Borda tracejada sutil. */\r\n}\r\n\r\n/* .detailImageLarge: Estilo para uma imagem principal grande, usada como fallback\r\n                     se as imagens do tazo não estiverem disponíveis, mas houver\r\n                     uma imagem na galeria para destacar. */\r\n.detailImageLarge {\r\n  width: 100%;\r\n  max-width: 320px; /* Largura máxima da imagem de destaque. */\r\n  height: auto; /* Altura se ajusta à proporção. */\r\n  max-height: 320px; /* Altura máxima para não ficar muito grande. */\r\n  object-fit: cover; /* Preenche a área, mantendo proporção (pode cortar). */\r\n  border-radius: var(--border-radius);\r\n  margin-left: auto; margin-right: auto; /* Centraliza. */\r\n  margin-bottom: 1.5rem; /* Espaço abaixo. */\r\n  display: block; /* Para que margin:auto funcione. */\r\n  box-shadow: 0 5px 15px var(--color-shadow);\r\n  background-color: #f0f0f0; /* Fundo enquanto carrega. */\r\n}\r\n\r\n\r\n/* --- TÍTULOS E STATUS DE EXTINÇÃO (dentro do .detailHeader) --- */\r\n.animalNameTitle {\r\n  font-family: var(--font-primary);\r\n  font-size: 2.2rem; /* Tamanho para telas pequenas/médias. */\r\n  font-weight: 800; /* Nunito Extra-Bold. */\r\n  margin: 0.75rem 0 0.2rem 0; /* Margens: topo | laterais | base. */\r\n  color: var(--color-primary);\r\n  line-height: 1.15; /* Altura da linha um pouco mais justa para títulos grandes. */\r\n}\r\n.scientificNameDetail {\r\n  font-family: var(--font-secondary);\r\n  font-size: 1.3rem;\r\n  font-weight: 400; /* Open Sans Regular. */\r\n  font-style: italic;\r\n  color: #455a64; /* Um tom de cinza-azulado mais escuro e sóbrio. */\r\n  margin-top: 0.25rem;\r\n  display: block;\r\n  width: 100%;\r\n  line-height: 1.3;\r\n}\r\n.scientificNameDetail em { /* Garante que o estilo itálico seja aplicado. */\r\n  font-style: italic;\r\n}\r\n\r\n/* Banner/etiqueta para o status de extinção. */\r\n.extinctionBanner {\r\n  padding: 0.7rem 1.2rem; /* Mais espaçamento interno. */\r\n  border-radius: var(--border-radius-small); /* Cantos menos arredondados que o card. */\r\n  color: var(--color-text-light);\r\n  margin-top: 1.25rem; /* Mais espaço acima. */\r\n  display: inline-block;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.08);\r\n  font-weight: 600; /* Semi-bold para o texto do banner. */\r\n}\r\n.extinctionBanner h2 {\r\n  margin: 0;\r\n  font-size: 1.1rem; /* Ajuste conforme necessário. */\r\n  line-height: 1.4;\r\n}\r\n\r\n/* Escala visual dos níveis de extinção. */\r\n.extinctionScaleVisual {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8px; /* Espaço um pouco maior entre os indicadores. */\r\n  margin-top: 1.25rem;\r\n  flex-wrap: wrap;\r\n}\r\n.scaleLevel {\r\n  padding: 0.4rem 0.8rem; /* Mais padding. */\r\n  font-size: 0.75rem; /* Tamanho da fonte da sigla. */\r\n  border-radius: var(--border-radius-small);\r\n  color: var(--color-text-light);\r\n  font-weight: bold;\r\n  min-width: 40px; /* Garante espaço para siglas de 2 letras. */\r\n  text-align: center;\r\n  border: 1px solid rgba(0, 0, 0, 0.2); /* Borda um pouco mais escura. */\r\n  transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;\r\n}\r\n/* Nível atual do animal na escala. */\r\n.scaleLevelCurrent {\r\n  border-width: 2.5px; /* Borda bem destacada. */\r\n  border-color: var(--color-text-light); /* Cor da borda igual à do texto para unidade. */\r\n  transform: scale(1.2); /* Aumenta bem o tamanho. */\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.25);\r\n  z-index: 2; /* Garante que fique na frente de todos os outros. */\r\n}\r\n/* Efeito de hover para os outros níveis da escala. */\r\n.scaleLevel:not(.scaleLevelCurrent):hover {\r\n  transform: scale(1.1); /* Aumenta um pouco. */\r\n  box-shadow: 0 1px 6px rgba(0,0,0,0.15);\r\n  z-index: 1; /* Fica na frente dos não-hovered, mas atrás do current. */\r\n}\r\n\r\n\r\n/* --- ESTILOS GERAIS PARA SEÇÕES DE INFORMAÇÃO (.detailSection) --- */\r\n.detailSection {\r\n  margin-bottom: 2.5rem; /* Mais espaço entre as seções. */\r\n  padding-bottom: 2rem;\r\n  border-bottom: 1px solid var(--color-border-light);\r\n}\r\n.detailSection:last-child {\r\n  border-bottom: none; margin-bottom: 0; padding-bottom: 0;\r\n}\r\n\r\n/* Título de cada seção (H2). */\r\n.sectionTitle {\r\n  font-family: var(--font-primary);\r\n  font-size: 1.5rem; /* Tamanho inicial. */\r\n  color: var(--color-primary);\r\n  margin-top: 0; /* Remove margem superior padrão de h2. */\r\n  margin-bottom: 1.25rem; /* Mais espaço abaixo do título, antes do conteúdo. */\r\n  border-bottom: 3px solid var(--color-secondary);\r\n  padding-bottom: 0.6rem;\r\n  display: inline-block; /* Para a borda se ajustar ao texto. */\r\n}\r\n.sectionTitle .icon { /* Emoji no título da seção. */\r\n  margin-right: 0.75rem; /* Mais espaço. */\r\n  font-size: 1em; /* Para herdar o tamanho da fonte do título. */\r\n  vertical-align: -0.1em; /* Alinhamento vertical sutil do emoji. */\r\n}\r\n\r\n/* Subtítulos (H3) dentro de uma seção. */\r\n.sectionSubtitle {\r\n  font-family: var(--font-primary);\r\n  font-size: 1.15rem;\r\n  color: var(--color-text-light); /* Cor do texto principal, não #333. */\r\n  margin-top: 1.5rem; /* Mais espaço acima se vier depois de outro conteúdo. */\r\n  margin-bottom: 0.8rem; /* Mais espaço abaixo, antes da lista/parágrafo. */\r\n  font-weight: 700; /* Bold. */\r\n}\r\n\r\n/* --- ESTILOS PARA LISTAS (<ul>, <dl>) E ITENS DE LISTA (<li>, <div>) --- */\r\n.list {\r\n  list-style: none;\r\n  padding-left: 0;\r\n  margin-top: 0.75rem; /* Espaço acima da lista. */\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.8rem; /* Espaço maior entre os itens da lista. */\r\n}\r\n\r\n.listItem {\r\n  background-color: #fdfdfd; /* Fundo quase branco, muito sutil. */\r\n  padding: 0.8rem 1.2rem; /* Mais padding interno. */\r\n  border-radius: var(--border-radius-small);\r\n  border-left: 5px solid var(--color-secondary-light, #FFDAB9); /* Borda lateral Pêssego Claro.\r\n                                                                   Defina --color-secondary-light em :root\r\n                                                                   ou use um tom de laranja bem claro. */\r\n  line-height: 1.6; /* Boa altura de linha para legibilidade. */\r\n  font-size: 0.95rem; /* Tamanho da fonte para o conteúdo dos itens. */\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05); /* Sombra muito sutil no item. */\r\n}\r\n.listItem strong {\r\n  color: var(--color-primary-darker); /* Verde mais escuro para 'strong'. */\r\n  font-weight: 700; /* Garante que seja bold. */\r\n}\r\n.listItem .icon {\r\n  margin-right: 0.5rem;\r\n  color: var(--color-secondary); /* Ícones podem ter a cor secundária. */\r\n}\r\n\r\n/* Estilos para Listas de Definição (<dt>, <dd>) */\r\n.definitionListDt { /* O termo (ex: \"Reino:\") */\r\n  font-weight: 700; /* Bold. */\r\n  color: var(--color-primary); /* Verde. */\r\n  margin-bottom: 0.25rem; /* Espaço abaixo do termo, antes da descrição. */\r\n  font-size: 0.9em; /* Um pouco menor que o texto da descrição. */\r\n  text-transform: uppercase; /* Deixa o termo em maiúsculas para destaque. */\r\n  letter-spacing: 0.5px; /* Leve espaçamento entre letras. */\r\n}\r\n.definitionListDd { /* A descrição (ex: \"Animalia\") */\r\n  margin-left: 0; /* Remove recuo padrão do navegador. */\r\n  color: var(--color-text-light);\r\n  font-size: 1em; /* Tamanho relativo ao .listItem. */\r\n}\r\n\r\n/* Parágrafos dentro das seções que podem precisar de margem inferior. */\r\n.paragraphWithMargin {\r\n  margin-bottom: 1.2rem; /* Mais espaço abaixo de parágrafos descritivos. */\r\n  line-height: 1.65; /* Altura de linha generosa para leitura. */\r\n  color: var(--color-text-light);\r\n}\r\n\r\n\r\n/* --- GALERIA DE FOTOS ADICIONAIS --- */\r\n.galleryHint { /* Texto de dica \"Clique nas imagens...\" */\r\n  font-size: 0.9rem;\r\n  color: var(--color-text-muted);\r\n  text-align: center;\r\n  margin-bottom: 1.5rem; /* Mais espaço abaixo da dica. */\r\n  font-style: italic;\r\n}\r\n\r\n.galleryContainer {\r\n  display: grid; /* Usando Grid para layout da galeria. */\r\n  /* Cria colunas que tentam ter no mínimo 260px, e se ajustam para preencher o espaço. */\r\n  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));\r\n  gap: 1.25rem; /* Espaço maior entre as imagens da galeria. */\r\n  justify-items: center; /* Centraliza os itens na célula do grid se houver espaço. */\r\n}\r\n.galleryImage { /* Cada imagem <img> na galeria. */\r\n  width: 100%; /* Ocupa a largura da célula do grid. */\r\n  /* height: 220px; (Removido para deixar a proporção natural da imagem controlar, ou definir aspect-ratio) */\r\n  aspect-ratio: 4 / 3; /* Força uma proporção 4:3 para as imagens, bom para galerias. Ajuste conforme necessário. */\r\n  object-fit: cover; /* Cobre a área da célula, mantendo proporção (pode cortar). */\r\n  border-radius: var(--border-radius); /* Cantos arredondados. */\r\n  box-shadow: 0 4px 10px var(--color-shadow); /* Sombra mais pronunciada. */\r\n  transition: transform 0.25s cubic-bezier(0.25, 0.1, 0.25, 1), box-shadow 0.25s cubic-bezier(0.25, 0.1, 0.25, 1);\r\n  background-color: #e0e0e0; /* Fundo cinza mais escuro para imagens carregando. */\r\n}\r\n.galleryImageClickable {\r\n  cursor: zoom-in;\r\n  position: relative; /* Para o pseudo-elemento do ícone de lupa. */\r\n}\r\n.galleryImageClickable:hover {\r\n  transform: scale(1.05) translateY(-3px); /* Aumenta e levanta um pouco. */\r\n  box-shadow: 0 8px 18px rgba(0,0,0,0.22); /* Sombra mais forte no hover. */\r\n}\r\n.galleryImageClickable:hover::after {\r\n  content: \"🔍\";\r\n  position: absolute;\r\n  top: 50%; left: 50%;\r\n  transform: translate(-50%, -50%) scale(1.7);\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.7); /* Fundo mais escuro para a lupa. */\r\n  padding: 0.8rem; /* Lupa maior. */\r\n  border-radius: 50%;\r\n  font-size: 1.8rem; /* Ícone maior. */\r\n  pointer-events: none;\r\n  opacity: 1; /* Já começa visível no hover (transição removida para simplicidade, pode ser adicionada). */\r\n}\r\n\r\n\r\n/* --- SEÇÃO DE FONTE DA INFORMAÇÃO (.sourceSection) --- */\r\n.sourceSection {\r\n  margin-top: 0.5rem; /* Espaço acima da seção de fonte. */\r\n}\r\n.sourceSection p {\r\n  margin-bottom: 0.5rem; /* Espaço entre parágrafos na fonte. */\r\n  font-size: 0.85rem; /* Tamanho da fonte para informações de citação. */\r\n  color: #424242; /* Cinza bem escuro. */\r\n  line-height: 1.5;\r\n}\r\n.sourceSection strong {\r\n  font-weight: 600; /* Semi-bold para os rótulos \"Citação:\", \"Link:\". */\r\n  color: var(--color-primary-darker);\r\n}\r\n.sourceSection a {\r\n  color: var(--color-secondary-darker); /* Laranja escuro para o link. */\r\n  text-decoration: none; /* Remove sublinhado padrão. */\r\n  font-weight: 600; /* Link em semi-bold. */\r\n  word-break: break-all; /* Permite que URLs longas quebrem linha. */\r\n}\r\n.sourceSection a:hover,\r\n.sourceSection a:focus-visible {\r\n  text-decoration: underline; /* Adiciona sublinhado no hover/focus. */\r\n  color: var(--color-primary); /* Muda para verde no hover/focus. */\r\n}\r\n\r\n\r\n/* --- TEXTO \"MUTED\" (.textMuted) --- */\r\n/* Para mensagens como \"Informação não disponível\". */\r\n.textMuted {\r\n  font-style: italic;\r\n  color: var(--color-text-muted);\r\n  font-size: 0.95rem; /* Um pouco maior para ser mais legível. */\r\n  padding: 0.8rem 0; /* Mais padding vertical. */\r\n}\r\n\r\n/* --- ESTILOS PARA O LIGHTBOX (VISUALIZADOR DE IMAGEM AMPLIADA) --- */\r\n/* .lightboxBackdrop: O fundo escuro que cobre toda a tela. */\r\n.lightboxBackdrop {\r\n  position: fixed; /* Fixo em relação à janela do navegador. */\r\n  top: 0; left: 0;\r\n  width: 100vw; /* 100% da largura da viewport. */\r\n  height: 100vh; /* 100% da altura da viewport. */\r\n  background-color: rgba(20, 20, 20, 0.92); /* Preto bem escuro com alta opacidade. */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: var(--z-index-modal, 1000); /* Garante que fique na frente de todo o resto. */\r\n  padding: 20px; /* Espaçamento das bordas da tela para o conteúdo do lightbox. */\r\n  box-sizing: border-box; /* Padding não aumenta o tamanho total do backdrop. */\r\n  cursor: zoom-out; /* Indica que clicar no fundo fecha o lightbox. */\r\n}\r\n\r\n/* .lightboxContentWrapper: O container que segura a imagem e os botões de controle. */\r\n.lightboxContentWrapper {\r\n  position: relative; /* Para posicionamento absoluto dos botões de navegação/fechar. */\r\n  display: flex;\r\n  align-items: center; /* Centraliza verticalmente a imagem e botões. */\r\n  justify-content: center; /* Centraliza horizontalmente. */\r\n  width: 100%; /* Ocupa a largura disponível dentro do padding do backdrop. */\r\n  height: 100%; /* Ocupa a altura disponível. */\r\n  cursor: default; /* Cursor padrão sobre o conteúdo, não o de zoom-out do backdrop. */\r\n}\r\n\r\n/* .lightboxImageContainer: Container direto da imagem, para aplicar sombras ou bordas se necessário. */\r\n.lightboxImageContainer {\r\n  display: flex; /* Para centralizar a imagem se ela for menor que o max-width/height. */\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 100%;  /* Limita ao tamanho do .lightboxContentWrapper. */\r\n  max-height: 100%;\r\n  box-shadow: 0 5px 25px rgba(0,0,0,0.4); /* Sombra na imagem ampliada. */\r\n  background-color: #111; /* Fundo escuro para a imagem, caso ela tenha transparência. */\r\n}\r\n\r\n/* .lightboxImage: A imagem ampliada em si. */\r\n.lightboxImage {\r\n  display: block; /* Remove espaço extra abaixo da imagem. */\r\n  max-width: 100%;  /* Garante que não ultrapasse o .lightboxImageContainer. */\r\n  max-height: 100vh; /* Garante que não ultrapasse a altura da tela (considerando padding do backdrop). */\r\n                     /* Pode ser 'calc(100vh - 40px)' se o padding do backdrop for 20px em cada lado. */\r\n  object-fit: contain; /* Mantém a proporção, garantindo que a imagem inteira seja visível. */\r\n  border-radius: 3px;\r\n  user-select: none; /* Impede que o usuário selecione a imagem como texto. */\r\n  -webkit-user-drag: none; /* Impede que a imagem seja arrastada (Safari). */\r\n}\r\n\r\n/* Estilo base para os botões de navegação (anterior/próximo) e o botão de fechar. */\r\n.lightboxNavButton,\r\n.lightboxCloseButton {\r\n  position: absolute;\r\n  background-color: rgba(50, 50, 50, 0.7); /* Fundo semi-transparente. */\r\n  color: white;\r\n  border: 1px solid rgba(255, 255, 255, 0.2); /* Borda sutil. */\r\n  border-radius: 50%; /* Botões circulares. */\r\n  width: 48px; /* Tamanho dos botões. */\r\n  height: 48px;\r\n  font-size: 2rem; /* Tamanho do ícone (seta/X). */\r\n  line-height: 46px; /* Ajuste para centralizar verticalmente o ícone. */\r\n  text-align: center;\r\n  cursor: pointer;\r\n  z-index: 1015; /* Acima da imagem. */\r\n  transition: background-color 0.2s ease-out, transform 0.15s ease-out, opacity 0.2s ease-out;\r\n  opacity: 0.8; /* Levemente transparentes. */\r\n  outline: none; /* Remove outline padrão. */\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.3);\r\n}\r\n/* Efeitos de hover e focus para os botões do lightbox. */\r\n.lightboxNavButton:hover, .lightboxCloseButton:hover,\r\n.lightboxNavButton:focus-visible, .lightboxCloseButton:focus-visible {\r\n  background-color: rgba(20, 20, 20, 0.9); /* Mais escuro e opaco. */\r\n  opacity: 1;\r\n  transform: scale(1.08); /* Aumenta um pouco. */\r\n  border-color: rgba(255, 255, 255, 0.4);\r\n}\r\n/* Foco visível específico para acessibilidade. */\r\n.lightboxNavButton:focus-visible, .lightboxCloseButton:focus-visible {\r\n    outline: 2px solid var(--color-secondary-light, #fab179); /* Contorno laranja claro. */\r\n    outline-offset: 2px;\r\n}\r\n\r\n/* Posição do botão \"Anterior\". */\r\n.lightboxPrevButton {\r\n  left: 25px; /* Distância da borda esquerda. */\r\n  top: 50%; /* Alinha ao meio verticalmente. */\r\n  transform: translateY(-50%); /* Ajuste fino para centralização vertical perfeita. */\r\n}\r\n/* Posição do botão \"Próximo\". */\r\n.lightboxNextButton {\r\n  right: 25px; /* Distância da borda direita. */\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n/* Posição e tamanho do botão \"Fechar\". */\r\n.lightboxCloseButton {\r\n  top: 25px; /* Distância do topo. */\r\n  right: 25px; /* Distância da direita. */\r\n  width: 42px; height: 42px; line-height: 40px; font-size: 1.7rem; /* Um pouco menor que os de navegação. */\r\n}\r\n\r\n\r\n/* --- AJUSTES RESPONSIVOS PARA TELAS MAIORES (MEDIA QUERIES) --- */\r\n@media (min-width: 768px) { /* Para tablets e desktops. */\r\n  .detailContainer {\r\n    padding: 2rem 2.5rem; /* Aumenta o padding do container principal. */\r\n  }\r\n  .animalNameTitle {\r\n    font-size: 2.6rem;\r\n  }\r\n  .scientificNameDetail {\r\n    font-size: 1.5rem;\r\n  }\r\n  .extinctionBanner h2 {\r\n    font-size: 1.25rem;\r\n  }\r\n  .scaleLevel {\r\n    font-size: 0.8rem; padding: 0.45rem 0.9rem; min-width: 45px;\r\n  }\r\n  .sectionTitle {\r\n    font-size: 1.75rem;\r\n  }\r\n  .sectionSubtitle {\r\n    font-size: 1.25rem;\r\n  }\r\n  .listItem {\r\n    font-size: 1rem; padding: 0.9rem 1.3rem;\r\n  }\r\n  .galleryImage {\r\n    /* A altura será definida por aspect-ratio, max-width controla o tamanho. */\r\n    max-width: 300px; /* Imagens da galeria podem ser maiores. */\r\n  }\r\n  .lightboxNavButton, .lightboxCloseButton { width: 52px; height: 52px; line-height: 50px; font-size: 2.2rem; }\r\n  .lightboxPrevButton { left: 35px; }\r\n  .lightboxNextButton { right: 35px; }\r\n  .lightboxCloseButton { top: 35px; right: 35px; width: 46px; height: 46px; line-height: 44px; font-size: 1.8rem; }\r\n}\r\n\r\n@media (min-width: 1024px) { /* Para telas grandes. */\r\n  .headerTazoContainer { max-width: 260px; height: 260px; }\r\n  .animalNameTitle { font-size: 3rem; }\r\n  .scientificNameDetail { font-size: 1.7rem; }\r\n  .detailContainer {\r\n    /* max-width: 1024px; (Opcional, se o App.js não controlar) */\r\n  }\r\n}\r\n\r\n/* Ajustes para telas muito pequenas, se os botões do lightbox ficarem muito grandes ou apertados. */\r\n@media (max-width: 480px) {\r\n  .lightboxNavButton { width: 40px; height: 40px; font-size: 1.6rem; line-height: 38px; }\r\n  .lightboxPrevButton { left: 8px; } /* Mais próximos da borda. */\r\n  .lightboxNextButton { right: 8px; }\r\n  .lightboxCloseButton { top: 8px; right: 8px; width: 34px; height: 34px; font-size: 1.5rem; line-height: 32px; }\r\n  .lightboxBackdrop { padding: 8px; } /* Menos padding no backdrop. */\r\n\r\n  .detailContainer { padding: 1rem 0.8rem; } /* Menos padding no container principal. */\r\n  .sectionTitle { font-size: 1.25rem; }\r\n  .animalNameTitle { font-size: 1.8rem; }\r\n  .scientificNameDetail { font-size: 1.05rem; }\r\n  .headerTazoContainer { max-width: 180px; height: 180px; margin-bottom: 1.2rem; }\r\n  .galleryImage { aspect-ratio: 1; } /* Imagens da galeria podem ser quadradas em telas pequenas */\r\n}","/* Caminho: src/components/Footer.module.css */\r\n\r\n/* ===================================================================================\r\n   ARQUIVO: Footer.module.css\r\n   DESCRIÇÃO: Este arquivo contém os estilos CSS especificamente para o componente Footer.\r\n              A extensão '.module.css' significa que ele é um \"CSS Module\".\r\n              Isso traz a vantagem do ESCOPO LOCAL para as classes CSS:\r\n              - Uma classe como '.footer' definida aqui não vai colidir com uma classe\r\n                '.footer' definida em outro arquivo CSS de outro componente.\r\n              - O sistema de build do React (Webpack, por exemplo) renomeia as classes\r\n                para nomes únicos globalmente (ex: 'Footer_footer__a1B2c').\r\n              - No arquivo Footer.jsx, acessamos essas classes através do objeto 'styles'\r\n                (ex: styles.footer).\r\n\r\n   VARIÁVEIS CSS GLOBAIS (Custom Properties):\r\n   Podemos (e devemos) usar as variáveis CSS que definimos no arquivo global\r\n   'src/index.css' (dentro do seletor :root). Por exemplo, para cores, fontes,\r\n   espaçamentos, etc., usamos `var(--nome-da-variavel)`.\r\n   =================================================================================== */\r\n\r\n/* --- ESTILO PARA O CONTAINER PRINCIPAL DO RODAPÉ (.footer) --- */\r\n/* Esta classe será aplicada ao elemento <footer /> no Footer.jsx. */\r\n.footer {\r\n  /* Alinhamento do Texto: */\r\n  text-align: center; /* Centraliza todo o conteúdo de texto dentro do rodapé.\r\n                          Afeta os elementos <p> filhos. */\r\n\r\n  /* Espaçamento Interno (Padding):\r\n      'padding' define o espaço entre o conteúdo do elemento e suas bordas.\r\n      - `1.5rem 1rem`: Forma abreviada para `padding-top: 1.5rem; padding-right: 1rem; padding-bottom: 1.5rem; padding-left: 1rem;`.\r\n                       (topo/base | laterais)\r\n      - 'rem' (Root EM): É uma unidade de medida relativa ao tamanho da fonte do elemento raiz\r\n                         do documento (a tag <html>). Se a fonte raiz for 16px (padrão comum),\r\n                         então 1rem = 16px, 1.5rem = 24px. Usar 'rem' para padding e margin\r\n                         ajuda na escalabilidade e acessibilidade, pois os espaçamentos\r\n                         se ajustam se o usuário aumentar o tamanho da fonte base do navegador. */\r\n  padding: 1.5rem 1rem;\r\n\r\n  /* Cores: */\r\n  background-color: #333333; /* Cor de fundo escura para o rodapé.\r\n                                  NOTA: Para consistência, idealmente usaríamos uma variável CSS global\r\n                                  se esta cor fosse usada em outros lugares, ex: `var(--color-dark-background);`.\r\n                                  Como no original estava o valor direto, mantive para referência, mas\r\n                                  explique aos alunos a vantagem de usar `var()`. */\r\n  color: #f0f0f0; /* Cor clara para o texto do rodapé, para garantir bom contraste\r\n                                  com o fundo escuro. Poderia ser `var(--color-text-on-dark);`. */\r\n\r\n  /* Posicionamento e Layout (para o \"Sticky Footer\"):\r\n      'margin-top: auto;' é uma técnica comum usada em conjunto com Flexbox no container pai\r\n      (neste caso, o `<div id=\"root\">` que foi configurado com `display: flex; flex-direction: column;`\r\n      em `src/index.css`).\r\n      Se o conteúdo principal da página for curto e não preencher toda a altura da tela,\r\n      'margin-top: auto;' no rodapé fará com que a margem superior do rodapé se expanda\r\n      para preencher todo o espaço vertical restante, efetivamente \"empurrando\" o rodapé\r\n      para a base da janela do navegador. Isso cria o efeito de \"sticky footer\" sem\r\n      precisar de posicionamento fixo ou absoluto que poderia cobrir conteúdo. */\r\n  margin-top: auto;\r\n\r\n  /* Tipografia: */\r\n  font-family: var(\r\n    --font-secondary,\r\n    \"Open Sans\",\r\n    sans-serif\r\n  ); /* Define a família de fontes para o rodapé.\r\n                                                                   Usa a variável global --font-secondary\r\n                                                                   com fallbacks se ela não estiver definida. */\r\n  font-size: 0.875rem; /* (14px se 1rem = 16px) Tamanho da fonte um pouco menor que o texto principal\r\n                           da página, comum para informações de rodapé. */\r\n  line-height: 1.6; /* Altura da linha para o texto do rodapé. Um valor entre 1.4 e 1.8\r\n                           geralmente melhora a legibilidade. (1.6 * 0.875rem). */\r\n}\r\n\r\n/* --- ESTILO PARA OS ELEMENTOS DE PARÁGRAFO (<p>) DENTRO DO RODAPÉ --- */\r\n/* Esta regra CSS se aplica a TODAS as tags <p> que são descendentes\r\n    de um elemento com a classe '.footer' (ou, mais precisamente,\r\n    o nome de classe único gerado, como '.Footer_footer__XYZ123 p'). */\r\n.footer p {\r\n  /* Margens Verticais:\r\n      Adiciona um pequeno espaço vertical entre os parágrafos no rodapé.\r\n      Não queremos que fiquem colados uns nos outros. */\r\n  margin-top: 0.5rem; /* 0.5rem (8px) de espaço ACIMA de cada parágrafo. */\r\n  margin-bottom: 0.5rem; /* 0.5rem (8px) de espaço ABAIXO de cada parágrafo. */\r\n  /* A forma abreviada `margin: 0.5rem 0;` faria o mesmo\r\n      (0.5rem para topo/base, 0 para esquerda/direita). */\r\n\r\n  /* Opcional: Limitar a largura máxima dos parágrafos para melhor leitura,\r\n      especialmente se o rodapé for muito largo em telas grandes.\r\n   max-width: 60ch; /* 'ch' é uma unidade relativa à largura do caractere \"0\" (zero) da fonte atual.\r\n                      Limitar a largura de linhas de texto a cerca de 45-75 caracteres\r\n                      (aproximadamente 40-60ch) é bom para legibilidade. */\r\n  /* margin-left: auto; (Se usar max-width, precisa centralizar se text-align:center no pai não for suficiente) */\r\n  /* margin-right: auto; */\r\n}\r\n\r\n/* --- ESTILO PARA A SEÇÃO DE \"DISCLAIMER\" (AVISOS/ATRIBUIÇÕES) (.disclaimer) --- */\r\n/* Esta classe será aplicada à `div` que agrupa os parágrafos do disclaimer no Footer.jsx. */\r\n.disclaimer {\r\n  margin-top: 1.25rem; /* (20px) Espaçamento maior acima da seção de disclaimer\r\n                          para separá-la visualmente do conteúdo principal do rodapé. */\r\n  padding-top: 1rem; /* (16px) Espaçamento interno no topo, DENTRO da borda que vamos adicionar abaixo. */\r\n\r\n  /* Borda Superior:\r\n      Adiciona uma linha decorativa no topo desta seção para criar uma separação visual clara.\r\n      - `1px`: A espessura da linha da borda.\r\n      - `dashed`: O estilo da linha (tracejada). Outras opções comuns: 'solid' (sólida), 'dotted' (pontilhada).\r\n      - `#cccccc`: A cor da linha (um cinza claro). Poderia ser `var(--color-border-light)`. */\r\n  border-top: 1px dashed #cccccc;\r\n\r\n  /* Tipografia específica para o disclaimer:\r\n      Geralmente, textos de disclaimer ou informações legais são um pouco menores e mais discretos. */\r\n  font-size: 0.75rem; /* (12px se 1rem = 16px, ou 0.75 * 0.875rem se baseado no .footer)\r\n                          Tamanho da fonte menor para o texto do disclaimer. */\r\n  color: #e0e0e0; /* Cor do texto um pouco mais clara que o texto principal do rodapé (#f0f0f0),\r\n                          para dar uma diferenciação sutil, mas ainda legível no fundo escuro.\r\n                          Certifique-se de que o contraste ainda seja bom para acessibilidade! */\r\n  line-height: 1.5; /* Altura da linha para o texto do disclaimer. */\r\n}\r\n\r\n/* --- ESTILO PARA OS PARÁGRAFOS (<p>) ESPECIFICAMENTE DENTRO DA SEÇÃO DE DISCLAIMER --- */\r\n/* Esta regra é mais específica: aplica-se a tags <p> que são descendentes\r\n    de um elemento com a classe '.disclaimer' (que por sua vez está dentro de '.footer'). */\r\n.disclaimer p {\r\n  /* Margens Verticais Menores para os parágrafos do disclaimer:\r\n      Para que as linhas de texto dentro do disclaimer fiquem um pouco mais próximas\r\n      umas das outras do que os parágrafos principais do rodapé. */\r\n  margin-top: 0.3rem; /* (aprox. 5px) */\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n/* ===================================================================================\r\n    PONTOS IMPORTANTES DE CSS PARA OS ALUNOS REVISAREM NESTE ARQUIVO:\r\n \r\n    - CSS Modules: Como eles ajudam a evitar conflitos de estilo.\r\n    - Variáveis CSS (Custom Properties): Como usar `var(--nome-da-variavel)`\r\n      para cores, fontes, espaçamentos, etc., definidas em `src/index.css`.\r\n    - Unidades de Medida CSS:\r\n      - `px` (pixels): Unidade absoluta, tamanho fixo.\r\n      - `rem` (root em): Relativa ao tamanho da fonte do elemento `<html>`. Ótima para\r\n                        escalabilidade geral e acessibilidade (se o usuário mudar o\r\n                        tamanho da fonte base do navegador, os `rem` se ajustam).\r\n      - `em`: Relativa ao tamanho da fonte do elemento PAI (ou do próprio elemento,\r\n              se `font-size` estiver definido nele). Útil para elementos que devem\r\n              escalar em proporção ao seu contexto de texto imediato.\r\n      - `%` (porcentagem): Relativa a alguma propriedade do elemento pai (ex: `width: 50%`\r\n                        significa 50% da largura do container pai).\r\n    - Box Model em CSS:\r\n      Lembre-se que todo elemento HTML é tratado como uma \"caixa\". O Box Model descreve\r\n      como `padding` (espaçamento interno), `border` (borda) e `margin` (espaçamento externo)\r\n      interagem com as dimensões do conteúdo do elemento.\r\n      A propriedade `box-sizing: border-box;` (que pode ser definida globalmente em `index.css`)\r\n      muda o cálculo para que `padding` e `border` sejam INCLUÍDOS na largura/altura\r\n      total do elemento, o que muitos desenvolvedores acham mais intuitivo.\r\n    - Propriedades de Layout (Flexbox):\r\n      O `margin-top: auto;` no `.footer` funciona em conjunto com `display: flex;`\r\n      e `flex-direction: column;` no elemento pai (`#root`) para criar o efeito\r\n      de \"sticky footer\".\r\n    - Tipografia:\r\n      Propriedades como `font-family`, `font-size`, `font-weight`, `line-height`, `text-align`\r\n      são fundamentais para controlar a aparência do texto.\r\n    - Semântica HTML e CSS:\r\n      Usar a tag `<footer>` no JSX é semanticamente correto. O CSS deve complementar\r\n      essa estrutura, tornando-a visualmente clara e agradável.\r\n    =================================================================================== */\r\n","/* Caminho: src/index.css */\n\n/* ===================================================================================\n   ARQUIVO: index.css\n   DESCRIÇÃO: Este é o arquivo CSS global principal da sua aplicação.\n              Os estilos definidos aqui têm o potencial de afetar todos os elementos\n              da sua aplicação, a menos que sejam especificamente sobrescritos\n              por regras mais específicas (como as de CSS Modules nos componentes\n              ou estilos inline).\n\n              É um bom lugar para:\n              1. Definir variáveis CSS globais (Custom Properties) para cores, fontes, etc.\n              2. Aplicar \"resets\" ou \"normalizações\" de CSS para garantir uma base\n                 consistente entre diferentes navegadores.\n              3. Definir estilos base para elementos HTML comuns como <body>, <h1>-<h6>, <p>, <a>, etc.\n   =================================================================================== */\n\n/* --- DEFINIÇÃO DE VARIÁVEIS CSS GLOBAIS (:root) --- */\n/*\n  O seletor ':root' representa o elemento raiz do documento HTML (a tag <html>).\n  É o local padrão e recomendado para declarar variáveis CSS globais.\n  Variáveis CSS (também chamadas de Custom Properties) são prefixadas com '--' (dois hifens).\n  Elas permitem que você armazene valores (como cores, tamanhos de fonte, espaçamentos)\n  em um local e os reutilize em todo o seu CSS.\n  Isso torna seu design mais consistente e fácil de manter. Se você precisar alterar\n  uma cor primária, por exemplo, basta alterá-la aqui e a mudança se refletirá\n  em todos os lugares onde a variável é usada.\n*/\n:root {\n  /* -- TIPOGRAFIA -- */\n  /* Famílias de fontes principais para a aplicação. */\n  --font-primary: \"Nunito\", Arial, sans-serif; /* Fonte principal, usada para títulos e elementos de destaque.\n                                                  \"Nunito\" é a preferida. Arial e sans-serif são fallbacks\n                                                  caso Nunito não esteja disponível ou não carregue. */\n  --font-secondary: \"Open Sans\", Verdana, sans-serif; /* Fonte secundária, para texto corrido e parágrafos. */\n\n  /* -- PALETA DE CORES PRINCIPAL -- */\n  /* Cores base que definem a identidade visual do ZooDex. */\n  --color-bg-light: #f0f2f5; /* Cinza muito claro, usado como cor de fundo principal da página. */\n  --color-text-light: #212529; /* Cinza escuro (quase preto), para texto principal com boa legibilidade. */\n  --color-text-muted: #6c757d; /* Cinza médio, para textos secundários, placeholders, ou informações menos importantes. */\n  --color-primary: #2e7d32; /* Verde Floresta Escuro: cor primária da marca, usada para destaques importantes. */\n  --color-primary-darker: #1b4d1e; /* Um tom mais escuro da cor primária, útil para :hover ou bordas. */\n  --color-secondary: #ef6c00; /* Laranja Queimado: cor secundária, para botões de ação, alertas, etc. */\n  --color-secondary-darker: #c65400; /* Um tom mais escuro da cor secundária. */\n  --color-card-bg: #ffffff; /* Branco, usado como cor de fundo para os cards dos animais. */\n  --color-shadow: rgba(\n    0,\n    0,\n    0,\n    0.1\n  ); /* Preto com 10% de opacidade, para sombras suaves. */\n  --color-border-light: #dee2e6; /* Cinza claro, para bordas sutis em inputs, cards, etc. */\n  --color-error: #dc3545; /* Vermelho, para mensagens de erro ou validação. */\n  --color-success: #198754; /* Verde, para mensagens de sucesso. */\n\n  /* -- CORES DE NÍVEL DE EXTINÇÃO -- */\n  /* Cores específicas para cada status de conservação dos animais.\n     Essas cores ajudam na identificação visual rápida do nível de risco. */\n  --color-lc: #aed581; /* Pouco Preocupante (Least Concern) */\n  --color-nt: #dce775; /* Quase Ameaçado (Near Threatened) */\n  --color-vu: #ffee58; /* Vulnerável (Vulnerable) */\n  --color-en: #ffa726; /* Em Perigo (Endangered) */\n  --color-cr: #ef5350; /* Criticamente em Perigo (Critically Endangered) */\n  --color-ew: #7e57c2; /* Extinto na Natureza (Extinct in the Wild) */\n  --color-ex: #616161; /* Extinto (Extinct) */\n  --color-dd: #bdbdbd; /* Dados Insuficientes (Data Deficient) */\n  --color-ne: #e0e0e0; /* Não Avaliado (Not Evaluated) */\n  --color-default-extinction: #cccccc; /* Cor padrão para status de extinção desconhecido ou não mapeado. */\n\n  /* -- TAMANHOS E ESPAÇAMENTOS -- */\n  /* Raio da Borda (para cantos arredondados) */\n  --border-radius: 8px; /* Raio de borda padrão, para elementos maiores como cards. */\n  --border-radius-small: 4px; /* Raio de borda menor, para botões, inputs, tags. */\n\n  /* Espaçamentos (pode ser expandido conforme necessário) */\n  --spacing-small: 0.5rem; /* 8px se 1rem = 16px */\n  --spacing-medium: 1rem; /* 16px */\n  --spacing-large: 1.5rem; /* 24px */\n\n  /* Z-indexes (para controle de empilhamento de camadas) */\n  --z-index-header: 100;\n  --z-index-modal: 1000;\n  --z-index-dropdown: 500;\n}\n\n/* --- ESTILOS BASE PARA ELEMENTOS HTML --- */\n\n/* Estilos aplicados à tag <html> e <body> para definir comportamentos básicos da página. */\nhtml {\n  font-size: 16px; /* Define o tamanho base da fonte para a unidade 'rem'.\n                      1rem será igual a 16px. Ajustar este valor pode escalar\n                      todos os elementos que usam 'rem' proporcionalmente. */\n  scroll-behavior: smooth; /* Habilita rolagem suave quando o usuário clica em links âncora (#). */\n}\n\nbody {\n  font-family: var(\n    --font-secondary\n  ); /* Define a família de fontes padrão para todo o texto da página. */\n  background-color: var(\n    --color-bg-light\n  ); /* Define a cor de fundo padrão da página. */\n  color: var(--color-text-light); /* Define a cor padrão do texto. */\n  margin: 0; /* Remove as margens padrão que os navegadores aplicam ao <body>.\n                Isso dá mais controle sobre o layout. */\n  line-height: 1.6; /* Define a altura da linha padrão para o texto.\n                       Um valor de 1.6 (sem unidade) significa 1.6 vezes o tamanho da fonte,\n                       o que geralmente melhora a legibilidade. */\n\n  /* Melhorias para renderização de fontes (anti-aliasing):\n     Estas propriedades tentam suavizar as bordas das fontes para melhor aparência. */\n  -webkit-font-smoothing: antialiased; /* Para navegadores baseados em WebKit (Chrome, Safari, Edge). */\n  -moz-osx-font-smoothing: grayscale; /* Para Firefox em macOS. */\n\n  /* Garante que o body possa ocupar pelo menos toda a altura da janela do navegador. */\n  min-height: 100vh; /* 'vh' é uma unidade relativa à altura da viewport (janela do navegador).\n                        100vh = 100% da altura da viewport. */\n  display: flex; /* Configura o body para usar Flexbox. */\n  flex-direction: column; /* Faz com que os filhos diretos do body (como #root) se empilhem verticalmente. */\n}\n\n/*\n  Estilos para o container principal do React (#root).\n  Esta é a <div id=\"root\"></div> no seu 'public/index.html' onde a aplicação React é montada.\n*/\n#root {\n  display: flex; /* Também usa Flexbox. */\n  flex-direction: column; /* Organiza os componentes filhos principais (Header, Main, Footer) em coluna. */\n  flex-grow: 1; /* Faz com que o #root cresça para ocupar qualquer espaço vertical disponível no body.\n                   Isso é importante para que o 'margin-top: auto' no Footer funcione corretamente. */\n  width: 100%; /* Garante que o #root ocupe toda a largura. */\n}\n\n/* --- ESTILIZAÇÃO DA BARRA DE ROLAGEM (OPCIONAL E ESPECÍFICO DO NAVEGADOR) --- */\n/*\n  Estes estilos customizam a aparência da barra de rolagem.\n  Funcionam principalmente em navegadores baseados em WebKit (Chrome, Safari, Edge).\n  Firefox tem sua própria forma de estilizar scrollbars (usando 'scrollbar-width' e 'scrollbar-color').\n  Esta é uma melhoria puramente estética e pode ser removida se não desejada.\n*/\n::-webkit-scrollbar {\n  width: 10px; /* Largura da barra de rolagem vertical. */\n  height: 10px; /* Altura da barra de rolagem horizontal. */\n}\n::-webkit-scrollbar-track {\n  /* O \"caminho\" ou \"trilha\" por onde a barra de rolagem se move. */\n  background: #f1f1f1; /* Cor de fundo do caminho (um cinza claro). */\n  border-radius: 10px; /* Cantos arredondados para o caminho. */\n}\n::-webkit-scrollbar-thumb {\n  /* O \"polegar\" ou a parte da barra que o usuário arrasta. */\n  background: #a0a0a0; /* Cor do polegar (um cinza médio). */\n  border-radius: 10px; /* Cantos arredondados para o polegar. */\n  border: 2px solid #f1f1f1; /* Adiciona uma pequena borda da cor do track para efeito. */\n}\n::-webkit-scrollbar-thumb:hover {\n  /* Quando o mouse está sobre o polegar. */\n  background: #777777; /* Cor mais escura para feedback. */\n}\n\n/* --- CLASSE UTILITÁRIA GLOBAL: .visually-hidden --- */\n/*\n  Esta classe é usada para esconder conteúdo visualmente, mas mantê-lo acessível\n  para leitores de tela. É uma técnica importante para acessibilidade (a11y).\n  Por exemplo, você pode ter um ícone que é autoexplicativo visualmente, mas\n  precisa de um texto descritivo para usuários de leitores de tela.\n*/\n.visually-hidden {\n  position: absolute !important; /* Tira do fluxo normal e permite posicionamento preciso. '!important' é usado\n                                   com cautela, mas aqui garante que outras regras não interfiram. */\n  height: 1px;\n  width: 1px; /* Reduz o tamanho ao mínimo. */\n  overflow: hidden; /* Esconde qualquer conteúdo que exceda esse tamanho mínimo. */\n  clip: rect(\n    1px,\n    1px,\n    1px,\n    1px\n  ); /* Técnica antiga, mas ainda eficaz para esconder conteúdo.\n                                   Define uma área de recorte minúscula. */\n  clip-path: inset(\n    50%\n  ); /* Técnica mais moderna para esconder, criando um clipe interno. */\n  white-space: nowrap; /* Impede que o texto quebre em várias linhas, caso haja. */\n  border: 0; /* Remove qualquer borda. */\n  margin: -1px; /* Move o elemento para fora da tela. */\n  padding: 0; /* Remove qualquer preenchimento. */\n}\n\n/* --- ESTILOS GLOBAIS PARA MENSAGENS DE CARREGAMENTO E ERRO --- */\n/*\n  Estas classes podem ser usadas em qualquer lugar na aplicação para exibir\n  mensagens de carregamento ou erro de forma consistente.\n*/\n.loading-message,\n.error-message {\n  text-align: center; /* Centraliza o texto da mensagem. */\n  font-size: 1.1rem; /* Tamanho da fonte um pouco maior para destaque. */\n  padding: var(--spacing-large) var(--spacing-medium); /* Usa variáveis de espaçamento. */\n  color: var(--color-text-muted); /* Cor de texto secundária. */\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n}\n\n.error-message {\n  color: var(\n    --color-error\n  ); /* Mensagens de erro usam a cor de erro definida. */\n  background-color: #f8d7da; /* Um fundo rosa claro para erros. */\n  border: 1px solid #f5c6cb; /* Borda rosa para erros. */\n  border-radius: var(--border-radius-small);\n}\n\n/* --- MELHORIA OPCIONAL: BOX-SIZING GLOBAL --- */\n/*\n  Pode ser útil adicionar isso para um comportamento mais intuitivo do Box Model:\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  Isso faz com que 'padding' e 'border' sejam incluídos na largura e altura\n  totais de um elemento, em vez de serem adicionados a elas.\n  Muitos desenvolvedores consideram isso uma configuração base mais fácil de trabalhar.\n  Se você usa um \"reset CSS\" ou \"normalize CSS\" mais completo, ele pode já incluir isso.\n*/\n"],"names":[],"sourceRoot":""}